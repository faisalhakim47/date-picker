{
  "version": 3,
  "sources": ["../src/events/calendar-view-change-event.js", "../src/events/date-related-event.js", "../src/events/selected-date-change-event.js", "../src/events/selected-date-set-event.js", "../src/events/selection-mode-set-event.js", "../src/events/year-month-view-change-event.js", "../src/tools/date.js", "../src/tools/dom.js", "../src/elements/context-aware.js", "../src/events/picked-date-set-event.js", "../src/elements/date-picker-control.js", "../src/elements/date-picker-view.js", "../src/components/f-date-picker-view.js", "../src/elements/date-picker-inline.js", "../src/components/f-date-picker-inline.js", "../src/elements/date-picker-month-view.js", "../src/components/f-date-picker-month-view.js", "../src/elements/date-picker-year-view.js", "../src/components/f-date-picker-year-view.js", "../src/events/picked-date-change-event.js", "../src/elements/date-picker-dialog.js", "../src/components/f-date-picker-dialog.js"],
  "sourcesContent": ["// @ts-check\n\n/**\n * @typedef {object} CalendarViewChangeEventDetail\n */\n\n/**\n * @extends {CustomEvent<CalendarViewChangeEventDetail>}\n */\nexport class CalendarViewChangeEvent extends CustomEvent {\n  static get EVENT_TYPE() {\n    return 'calendar-view-change';\n  }\n\n  /**\n   * @param {CustomEventInit<CalendarViewChangeEventDetail>} [options]\n   */\n  constructor(options) {\n    super(CalendarViewChangeEvent.EVENT_TYPE, options);\n  }\n}\n", "// @ts-check\n\n/** @typedef {import('../tools/date.js').DateRange} DateRange */\n\n/** @typedef {DateRange} DateRelatedEventDetail */\n\n/**\n * @extends {CustomEvent<DateRelatedEventDetail>}\n */\nexport class DateRelatedEvent extends CustomEvent {\n  /** @type {Date} */\n  #beginDate;\n\n  /** @type {Date} */\n  #endDate;\n\n  /**\n   * @param {string} type\n   * @param {DateRange} dateRange\n   * @param {CustomEventInit<DateRelatedEventDetail>} [options]\n   */\n  constructor(type, dateRange, options) {\n    super(type, {\n      ...options,\n      detail: {\n        ...options?.detail,\n        ...dateRange,\n      },\n    });\n\n    this.#beginDate = dateRange.beginDate;\n    this.#endDate = dateRange.endDate;\n  }\n\n  get beginDate() {\n    return this.#beginDate;\n  }\n\n  get endDate() {\n    return this.#endDate;\n  }\n}\n", "// @ts-check\n\nimport { DateRelatedEvent } from './date-related-event.js';\n\n/** @typedef {import('../tools/date.js').DateRange} DateRange */\n/** @typedef {import('./date-related-event.js').DateRelatedEventDetail} DateRelatedEventDetail */\n\nexport class SelectedDateChangeEvent extends DateRelatedEvent {\n  static get EVENT_TYPE() {\n    return 'selected-date-change';\n  }\n\n  /**\n   * @param {DateRange} dateRange\n   * @param {CustomEventInit<DateRelatedEventDetail>} [options]\n   */\n  constructor(dateRange, options) {\n    super(SelectedDateChangeEvent.EVENT_TYPE, dateRange, options);\n  }\n}\n", "// @ts-check\n\nimport { DateRelatedEvent } from './date-related-event.js';\n\n/** @typedef {import('../tools/date.js').DateRange} DateRange */\n/** @typedef {import('./date-related-event.js').DateRelatedEventDetail} DateRelatedEventDetail */\n\nexport class SelectedDateSetEvent extends DateRelatedEvent {\n  static get EVENT_TYPE() {\n    return 'selected-date-set';\n  }\n\n  /**\n   * @param {DateRange} dateRange\n   * @param {CustomEventInit<DateRelatedEventDetail>} [options]\n   */\n  constructor(dateRange, options) {\n    super(SelectedDateSetEvent.EVENT_TYPE, dateRange, options);\n  }\n}\n", "// @ts-check\n\n/** @typedef {import('../tools/date.js').DateRange} DateRange */\n/** @typedef {import('./date-related-event.js').DateRelatedEventDetail} DateRelatedEventDetail */\n/** @typedef {'single'|'range'} SelectionMode */\n\n/**\n * @typedef {object} SelectionModeSetEventDetail\n * @property {SelectionMode} selectionMode\n */\n\n/**\n * @extends {CustomEvent<SelectionModeSetEventDetail>}\n */\nexport class SelectionModeSetEvent extends CustomEvent {\n  static get EVENT_TYPE() {\n    return 'selection-mode-set';\n  }\n\n  /** @type {SelectionMode} */\n  #selectionMode;\n\n  /**\n   * @param {SelectionMode} selectionMode\n   * @param {CustomEventInit<SelectionModeSetEventDetail>} [options]\n   */\n  constructor(selectionMode, options) {\n    super(SelectionModeSetEvent.EVENT_TYPE, {\n      ...options,\n      detail: {\n        ...options?.detail,\n        selectionMode,\n      },\n    });\n\n    this.#selectionMode = selectionMode;\n  }\n\n  get selectionMode() {\n    return this.#selectionMode;\n  }\n}\n", "// @ts-check\n\n/**\n * @typedef {object} YearMonthViewChangeEventDetail\n * @property {number} year\n * @property {number} monthIndex\n * @property {string} monthLabel\n */\n\n/**\n * @extends {CustomEvent<YearMonthViewChangeEventDetail>}\n */\nexport class YearMonthViewChangeEvent extends CustomEvent {\n  static get EVENT_TYPE() {\n    return 'year-month-view-change';\n  }\n\n  /** @type {number} */\n  #year;\n\n  /** @type {number} */\n  #monthIndex;\n\n  /**\n   * @param {number} year\n   * @param {number} monthIndex\n   * @param {string} monthLabel\n   * @param {CustomEventInit<YearMonthViewChangeEventDetail>} [options]\n   */\n  constructor(year, monthIndex, monthLabel, options) {\n    super(YearMonthViewChangeEvent.EVENT_TYPE, {\n      ...options,\n      detail: {\n        ...options?.detail,\n        year,\n        monthIndex,\n        monthLabel,\n      },\n    });\n\n    this.#year = year;\n    this.#monthIndex = monthIndex;\n  }\n\n  get year() {\n    return this.#year;\n  }\n\n  get monthIndex() {\n    return this.#monthIndex;\n  }\n}\n", "// @ts-check\n\n/** @typedef {Date|number|string} AnyDate */\n\n/**\n * @typedef {object} DateRange\n * @property {Date} beginDate\n * @property {Date} endDate\n */\n\n/**\n * @param {DateRange} dateRange\n * @returns {string}\n */\nexport function dateRangeToString({ beginDate, endDate }) {\n  if (isInvalidDate(beginDate) || isInvalidDate(endDate)) {\n    return '';\n  }\n\n  const beginDateString = dateToString(beginDate);\n  const endDateString = dateToString(endDate);\n\n  return `${beginDateString}/${endDateString}`;\n}\n\n/**\n * @param {Date} date\n * @returns {string}\n */\nexport function dateToString(date) {\n  if (isInvalidDate(date)) {\n    return '';\n  }\n\n  const fullIsoString = date.toISOString();\n  const dateIsoString = fullIsoString.split('T')[0];\n\n  return dateIsoString;\n}\n\n/**\n * @param {AnyDate} [anyDate]\n * @returns {boolean}\n */\nexport function isInvalidDate(anyDate) {\n  if (!anyDate) {\n    return true;\n  }\n  const date = new Date(anyDate);\n  return date === null || isNaN(date.getTime());\n}\n\n/**\n * @param {string} dateRangeString\n * @returns {DateRange}\n */\nexport function dateRangeStringToDateRange(dateRangeString) {\n  const [beginDateString, endDateString] = dateRangeString.split('/');\n\n  const beginDate = new Date(beginDateString);\n  const endDate = new Date(endDateString);\n\n  return {\n    beginDate: isInvalidDate(beginDate) ? null : beginDate,\n    endDate: isInvalidDate(endDate) ? null : endDate,\n  };\n}\n\n/**\n * @param {Date} date\n * @returns {number}\n */\nexport function dateToNumber(date) {\n  if (isInvalidDate(date)) {\n    return 0;\n  }\n\n  const dateString = dateToString(date);\n\n  return parseInt(dateString.replace(/-/g, ''), 10);\n}\n\n/**\n * @param {string} dateString\n * @returns {Date}\n */\nexport function dateStringToDate(dateString) {\n  \n\n  const [yearStr, monthStr, rawDateStr] = dateString.split('-');\n\n  const dateStr = (rawDateStr || '')\n    .split('T')[0]\n    .split(' ')[0];\n\n  const year = parseInt(yearStr, 10);\n  const month = parseInt(monthStr, 10);\n  const date = parseInt(dateStr, 10);\n\n  return new Date(year, month - 1, date);\n}\n", "// @ts-check\n\n/**\n * @typedef {Node|Attr|string} BasicProp\n */\n\n/**\n * @template {keyof HTMLElementTagNameMap} TagName\n * @typedef {(element: HTMLElementTagNameMap[TagName]) => void} FnProp\n */\n\n/**\n * @template {keyof HTMLElementTagNameMap} TagName\n * @typedef {BasicProp|FnProp<TagName>|void} Prop\n */\n\n// let padding = 0;\n\n/**\n * @template {keyof HTMLElementTagNameMap} TagName\n * @template {HTMLElementTagNameMap[TagName]} Elm\n * @param {TagName|Elm} tagNameOrElement\n * @param {(element: HTMLElementTagNameMap[TagName]|Elm) => Array<Prop<TagName>>} propFn\n * @returns {HTMLElementTagNameMap[TagName]|Elm}\n */\nexport function el(tagNameOrElement, propFn) {\n  // console.log(`${' '.repeat(padding)}<${tagNameOrElement}>`);\n  // padding += 2;\n\n  /** @type {HTMLElementTagNameMap[TagName]|Elm} */\n  const element = (typeof tagNameOrElement === 'string')\n    ? document.createElement(tagNameOrElement)\n    : tagNameOrElement;\n\n  const props = propFn(element);\n\n  for (const prop of props) {\n    if (prop instanceof Attr) {\n      element.setAttributeNode(prop);\n    }\n    else if (prop instanceof Node) {\n      element.appendChild(prop);\n    }\n    else if (typeof prop === 'function') {\n      prop(element);\n    }\n    else if (typeof prop === 'string') {\n      const text = document.createTextNode(prop);\n      element.appendChild(text);\n    }\n  }\n\n  // padding -= 2;\n  // console.log(`${' '.repeat(padding)}</${tagNameOrElement}>`);\n\n  return element;\n}\n\n/**\n   * @param {string} localName\n   * @param {string} value\n   * @returns {Attr}\n   */\nexport function at(localName, value) {\n  const attr = document.createAttribute(localName);\n  attr.value = value;\n  return attr;\n}\n\n/**\n   * @param {string} data\n   * @returns {Text}\n   */\nexport function tx(data) {\n  const text = document.createTextNode(data);\n  return text;\n}\n\n/**\n   * @template {keyof HTMLElementTagNameMap} TagName\n   * @template {keyof HTMLElementEventMap} EventName\n   * @param {EventName} type\n   * @param {(this: HTMLElementTagNameMap[TagName], event: HTMLElementEventMap[EventName]) => void} listener\n   * @param {boolean|AddEventListenerOptions} [options]\n   * @returns {(element: HTMLElementTagNameMap[TagName]) => void}\n   */\nexport function on(type, listener, options) {\n  return function (element) {\n    /** @type {any} */\n    const bypassTypingListener = listener;\n    element.addEventListener(type, bypassTypingListener, options);\n  };\n}\n", "// @ts-check\n\nexport class ContextAwareElement extends HTMLElement {\n  /**\n   * Why is this method async?\n   * this method usually is called in connectedCallback hook of web component\n   * but unfortunately, before connectedCallback is called, the element is not yet attached to the DOM\n   * therefore the parentElement is invalid, and we need to wait for the next tick\n   *\n   * @template {ContextAwareElement} T\n   * @param {new () => T} constructor\n   * @returns {Promise<T>}\n   */\n  async requireContext(constructor) {\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        /** @type {Node} */\n        let element = this;\n\n        while (element instanceof Node) {\n          if (element instanceof constructor) {\n            resolve(element);\n            return;\n          }\n\n          if (element instanceof ShadowRoot) {\n            element = element.host;\n          }\n          else {\n            element = element.parentNode;\n          }\n        }\n\n        console.warn(`Context ${constructor.name} not found`);\n\n        reject(new Error(`Context ${constructor.name} not found`));\n      });\n    });\n  }\n}\n", "// @ts-check\n\nimport { DateRelatedEvent } from './date-related-event.js';\n\n/** @typedef {import('../tools/date.js').DateRange} DateRange */\n/** @typedef {import('./date-related-event.js').DateRelatedEventDetail} DateRelatedEventDetail */\n\nexport class PickedDateSetEvent extends DateRelatedEvent {\n  static get EVENT_TYPE() {\n    return 'picked-date-set';\n  }\n\n  /**\n   * @param {DateRange} dateRange\n   * @param {CustomEventInit<DateRelatedEventDetail>} [options]\n   */\n  constructor(dateRange, options) {\n    super(PickedDateSetEvent.EVENT_TYPE, dateRange, options);\n  }\n}\n", "// @ts-check\n\nimport { PickedDateSetEvent } from '../events/picked-date-set-event.js';\nimport { dateStringToDate, dateToString, isInvalidDate } from '../tools/date.js';\n\nimport { ContextAwareElement } from './context-aware.js';\n\n/** @typedef {import('../events/selection-mode-set-event.js').SelectionMode} SelectionMode */\n\n/**\n * @typedef {'day'} TimeUnit\n */\n\nexport class DatePickerControlElement extends ContextAwareElement {\n  static get formAssociated() {\n    return true;\n  }\n\n  /** @type {TimeUnit} */\n  static TIME_UNIT_DAY = 'day';\n\n  /** @type {SelectionMode} */\n  static SELECTION_MODE_SINGLE = 'single';\n\n  /** @type {SelectionMode} */\n  static SELECTION_MODE_RANGE = 'range';\n\n  static #AVAILABLE_TIME_UNITS = [\n    DatePickerControlElement.TIME_UNIT_DAY,\n  ];\n\n  static #AVAILABLE_SELECTION_MODES = [\n    DatePickerControlElement.SELECTION_MODE_SINGLE,\n    DatePickerControlElement.SELECTION_MODE_RANGE,\n  ];\n\n  #internals = this.attachInternals();\n\n  /** @type {TimeUnit} */\n  #timeUnit = 'day';\n\n  /** @type {SelectionMode} */\n  #selectionMode = 'single';\n\n  /** @type {Date} */\n  #beginDate;\n\n  /** @type {Date} */\n  #endDate;\n\n  connectedCallback() {\n    if (this.hasAttribute('value')) {\n      this.value = this.getAttribute('value');\n    }\n\n    if (this.hasAttribute('time-unit')) {\n      /** @type {any} */\n      const timeUnit = this.getAttribute('time-unit');\n      this.timeUnit = timeUnit;\n    }\n\n    if (this.hasAttribute('selection-mode')) {\n      /** @type {any} */\n      const selectionMode = this.getAttribute('selection-mode');\n      this.selectionMode = selectionMode;\n    }\n  }\n\n  get timeUnit() {\n    return this.#timeUnit;\n  }\n\n  /**\n   * @param {TimeUnit} timeUnit\n   */\n  set timeUnit(timeUnit) {\n    if (!DatePickerControlElement.#AVAILABLE_TIME_UNITS.includes(timeUnit)) {\n      console.warn('Invalid time unit', timeUnit);\n      return;\n    }\n\n    this.#timeUnit = timeUnit;\n  }\n\n  get selectionMode() {\n    return this.#selectionMode;\n  }\n\n  /**\n   * @param {any} selectionMode\n   */\n  set selectionMode(selectionMode) {\n    if (!DatePickerControlElement.#AVAILABLE_SELECTION_MODES.includes(selectionMode)) {\n      console.warn('Invalid selection mode', selectionMode);\n      return;\n    }\n\n    this.#selectionMode = selectionMode;\n  }\n\n  get value() {\n\n    /** @type {(date: Date) => string} */\n    let dateFormatter = null;\n\n    if (this.#timeUnit === DatePickerControlElement.TIME_UNIT_DAY) {\n      dateFormatter = dateToString;\n    }\n    else {\n      throw new Error('Invalid time unit');\n    }\n\n    if (this.#selectionMode === DatePickerControlElement.SELECTION_MODE_RANGE) {\n      return (this.#beginDate instanceof Date && this.#endDate instanceof Date)\n        ? `${dateFormatter(this.#beginDate)}/${dateFormatter(this.#endDate)}`\n        : null;\n    }\n    else if (this.#selectionMode === DatePickerControlElement.SELECTION_MODE_SINGLE) {\n      return this.#beginDate instanceof Date\n        ? dateFormatter(this.#beginDate)\n        : null;\n    }\n    else {\n      throw new Error('Invalid selection mode');\n    }\n  }\n\n  /**\n   * @param {string} value\n   */\n  set value(value) {\n    if (!value) {\n      this.#beginDate = null;\n      this.#endDate = null;\n      this.#internals.setFormValue(null);\n      this.removeAttribute('value');\n      this.dispatchEvent(new PickedDateSetEvent({\n        beginDate: null,\n        endDate: null,\n      }));\n      return;\n    }\n\n    /** @type {(dateStr: string) => Date} */\n    let dateParserFn = null;\n\n    if (this.#timeUnit === DatePickerControlElement.TIME_UNIT_DAY) {\n      dateParserFn = dateStringToDate;\n    }\n    else {\n      throw new Error('Invalid time unit');\n    }\n\n    if (this.#selectionMode === DatePickerControlElement.SELECTION_MODE_RANGE) {\n      if (!value?.includes('/')) {\n        console.warn('Invalid date range format', value);\n        return;\n      }\n\n      const [beginDateStr, endDateStr] = value.split('/');\n\n      const beginDate = dateParserFn(beginDateStr);\n      const endDate = dateParserFn(endDateStr);\n\n      if (isInvalidDate(beginDate)) {\n        this.#beginDate = null;\n        this.#endDate = null;\n        this.#internals.setFormValue(null);\n        this.removeAttribute('value');\n        this.dispatchEvent(new PickedDateSetEvent({\n          beginDate: null,\n          endDate: null,\n        }));\n      }\n      else {\n        this.#beginDate = beginDate;\n\n        if (isInvalidDate(endDate)) {\n          this.#endDate = null;\n          this.#internals.setFormValue(beginDateStr);\n          this.dispatchEvent(new PickedDateSetEvent({\n            beginDate,\n            endDate: null,\n          }));\n        }\n        else {\n          this.#endDate = endDate;\n          this.#internals.setFormValue(`${beginDateStr}/${endDateStr}`);\n          this.dispatchEvent(new PickedDateSetEvent({\n            beginDate,\n            endDate,\n          }));\n        }\n      }\n    }\n    else if (this.#selectionMode === DatePickerControlElement.SELECTION_MODE_SINGLE) {\n      const date = dateParserFn(value);\n\n      if (isInvalidDate(date)) {\n        this.#beginDate = null;\n        this.#internals.setFormValue(null);\n        this.removeAttribute('value');\n        this.dispatchEvent(new PickedDateSetEvent({\n          beginDate: null,\n          endDate: null,\n        }));\n      }\n      else {\n        this.#beginDate = date;\n        this.#internals.setFormValue(dateToString(date));\n        this.dispatchEvent(new PickedDateSetEvent({\n          beginDate: date,\n          endDate: null,\n        }));\n      }\n    }\n    else {\n      throw new Error('Invalid selection mode');\n    }\n\n    const [beginDateStr, endDateStr] = (value ?? '').split('/');\n\n    const beginDate = beginDateStr\n      ? new Date(beginDateStr)\n      : new Date(Infinity);\n\n    const endDate = endDateStr\n      ? new Date(endDateStr)\n      : new Date(Infinity);\n\n    const isInvalidBeginDate = isInvalidDate(beginDate);\n    const isInvalidEndDate = isInvalidDate(endDate);\n\n    if (isInvalidBeginDate) {\n      this.#beginDate = null;\n      this.#endDate = null;\n      this.#internals.setFormValue(null);\n      this.removeAttribute('value');\n      this.dispatchEvent(new PickedDateSetEvent({\n        beginDate: null,\n        endDate: null,\n      }));\n    }\n    else {\n      const beginDateStr = dateToString(beginDate);\n      this.#beginDate = beginDate;\n\n      if (isInvalidEndDate) {\n        this.#endDate = null;\n        this.#internals.setFormValue(beginDateStr);\n        this.dispatchEvent(new PickedDateSetEvent({\n          beginDate,\n          endDate: null,\n        }));\n      }\n      else {\n        const endDateStr = dateToString(endDate);\n        this.#endDate = endDate;\n        this.#internals.setFormValue(`${beginDateStr}/${endDateStr}`);\n        this.dispatchEvent(new PickedDateSetEvent({\n          beginDate,\n          endDate,\n        }));\n      }\n    }\n  }\n\n  get beginDateValue() {\n    return this.#beginDate instanceof Date\n      ? new Date(this.#beginDate)\n      : null;\n  }\n\n  get endDateValue() {\n    return this.#endDate instanceof Date\n      ? new Date(this.#endDate)\n      : null;\n  }\n\n  get form() {\n    return this.#internals.form;\n  }\n\n  get name() {\n    return this.attributes.getNamedItem('name')?.nodeValue;\n  }\n\n  get type() {\n    return this.localName;\n  }\n\n  get validity() {\n    return this.#internals.validity;\n  }\n\n  get validationMessage() {\n    return this.#internals.validationMessage;\n  }\n\n  get willValidate() {\n    return this.#internals.willValidate;\n  }\n\n  checkValidity() {\n    return this.#internals.checkValidity();\n  }\n\n  reportValidity() {\n    return this.#internals.reportValidity();\n  }\n}\n", "// @ts-check\n\nimport { CalendarViewChangeEvent } from '../events/calendar-view-change-event.js';\nimport { SelectedDateChangeEvent } from '../events/selected-date-change-event.js';\nimport { SelectedDateSetEvent } from '../events/selected-date-set-event.js';\nimport { SelectionModeSetEvent } from '../events/selection-mode-set-event.js';\nimport { YearMonthViewChangeEvent } from '../events/year-month-view-change-event.js';\nimport { dateToNumber, dateToString, isInvalidDate } from '../tools/date.js';\nimport { at, el, on, tx } from '../tools/dom.js';\n\nimport { ContextAwareElement } from './context-aware.js';\nimport { DatePickerControlElement } from './date-picker-control.js';\n\n/** @typedef {import('./date-picker-control.js').SelectionMode} SelectionMode */\n\nexport class DatePickerViewElement extends ContextAwareElement {\n  static #ID_INC = 0;\n\n  static #STYLES = (function () {\n    const style = new CSSStyleSheet();\n\n    style.replace(`\n:host {\n  --si-width: 336px;\n  --si-calendar-label-margin: 8px;\n  --si-calendar-label-text-color: dimgray;\n  --si-cell-size: calc(var(--si-width) / 7);\n  --si-cell-width: var(--si-cell-size);\n  --si-cell-height: var(--si-cell-size);\n  --si-cell-bg-color: white;\n  --si-cell-text-color: black;\n  --si-cell-font-weight: normal;\n  --si-cell-selected-bg-color: aliceblue;\n  --si-cell-selected-text-color: black;\n  --si-cell-selected-font-weight: bold;\n  --si-cell-weekend-text-color: red;\n  --si-cell-other-month-text-color: silver;\n  --si-cell-other-month-weekend-text-color: tomato;\n  --si-cell-font-size: 16px;\n  --si-inner-cell-selected-bg-color: lightblue;\n  --si-inner-cell-padding: 10px;\n  --si-inner-cell-size: min(\n    calc(var(--si-cell-width) - var(--si-inner-cell-padding)),\n    calc(var(--si-cell-height) - var(--si-inner-cell-padding))\n  );\n  --si-header-height: calc(var(--si-cell-size) - 4px);\n  --si-section-height: calc(\n      var(--si-header-height)\n      + var(--si-calendar-label-margin)\n      + var(--si-header-height)\n      + var(--si-calendar-label-margin)\n      + var(--si-cell-height)\n      + var(--si-cell-height)\n      + var(--si-cell-height)\n      + var(--si-cell-height)\n      + var(--si-cell-height)\n      + var(--si-cell-height)\n  );\n  --si-section-width: var(--si-width);\n  display: block;\n  font-family: sans-serif;\n  width: var(--si-width);\n  height: var(--si-section-height);\n}\n\n.sr-only {\n  display: none;\n  visibility: hidden;\n}\n\nsection {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: var(--si-section-width);\n  height: var(--si-section-height);\n}\n\nsection > header {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n  width: 100%;\n  height: var(--si-header-height);\n}\n\nsection > header > .year-month-pagination {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n}\n\nsection > header > .year-month-pagination > button {\n  box-sizing: border-box;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  width: var(--si-cell-size);\n  height: var(--si-header-height);\n  margin: 0;\n  padding: 0;\n  border: var(--si-button-border, 1px solid none);\n  background-color: var(--si-button-bg-color, none);\n}\n\nsection select[name=\"month\"] {\n  box-sizing: border-box;\n  height: var(--si-header-height);\n  padding: 0 8px;\n}\n\nsection input[name=\"year\"] {\n  box-sizing: border-box;\n  display: block;\n  width: 96px;\n  height: var(--si-header-height);\n  padding: 0 8px;\n}\n\nsection > table {\n  border-collapse: collapse;\n  border-spacing: 0;\n  width: var(--si-width);\n}\n\nsection > table,\nsection > table > thead > tr > th,\nsection > table > tbody > tr > td {\n  border: none;\n}\n\nsection > table > thead > tr > th,\nsection > table > thead > tr > th > span,\nsection > table > tbody > tr > td,\nsection > table > tbody > tr > td > label {\n  box-sizing: border-box;\n  width: var(--si-cell-width);\n  height: var(--si-cell-height);\n  padding: 0;\n  margin: 0;\n  font-size: var(--si-cell-font-size);\n}\n\nsection > table > thead > tr > th > span {\n  -webkit-user-select: none;\n  user-select: none;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  line-height: 1;\n  margin-top: var(--si-calendar-label-margin);\n  margin-bottom: var(--si-calendar-label-margin);\n  font-weight: normal;\n  color: var(--si-calendar-label-text-color);\n}\n\nsection > table > tbody > tr > td > label {\n  box-sizing: border-box;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n}\n\nsection > table > tbody > tr > td > label.range-selected {\n  background-color: var(--si-cell-selected-bg-color);\n}\n\nsection > table > tbody > tr > td > label.range-selected-first {\n  border-top-left-radius: 50%;\n  border-bottom-left-radius: 50%;\n}\n\nsection > table > tbody > tr > td > label.range-selected-last {\n  border-top-right-radius: 50%;\n  border-bottom-right-radius: 50%;\n}\n\nsection > table > tbody > tr > td > label > input {\n  display: none;\n  visibility: hidden;\n}\n\nsection > table > tbody > tr > td > label > span {\n  -webkit-user-select: none;\n  user-select: none;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  width: var(--si-inner-cell-size);\n  height: var(--si-inner-cell-size);\n  border-radius: 50%;\n}\n\nsection > table > tbody > tr > td > label > span > span {\n  display: block;\n  padding: 0;\n  margin: 0;\n  font-variant-numeric: normal;\n  line-height: 1;\n}\n\nsection > table > tbody > tr > td > label:has(input:checked) > span {\n  background-color: var(--si-inner-cell-selected-bg-color);\n}\n\nsection > table > tbody > tr > td > label:has(input:checked) > span > span {\n  color: var(--si-cell-selected-text-color, white);\n  font-weight: var(--si-cell-selected-font-weight, bold);\n}\n\nsection > table > tbody > tr > td > label.weekend > span > span {\n  color: var(--si-cell-weekend-text-color);\n}\n\nsection > table > tbody > tr > td > label.other-month > span > span {\n  color: var(--si-cell-other-month-text-color);\n}\n\nsection > table > tbody > tr > td > label.other-month.weekend > span > span {\n  color: var(--si-cell-other-month-weekend-text-color);\n}\n    `);\n\n    return [\n      style,\n    ];\n  })();\n\n  static get observedAttributes() {\n    return [\n      'lang',\n      'timeperiod',\n    ];\n  }\n\n  #shadowRoot = this.attachShadow({ mode: 'closed' });\n  #idSufix = DatePickerViewElement.#ID_INC++;\n\n  /** @type {HTMLTableSectionElement} */\n  #calendarTbody;\n\n  /** @type {HTMLInputElement} */\n  #yearInput;\n\n  /** @type {HTMLSelectElement} */\n  #monthSelect;\n\n  /** @type {HTMLSlotElement} */\n  #yearMonthControlsSlot;\n\n  #minYear = 100;\n  #maxYear = 275759;\n\n  #yearView = 0;\n  #monthIndexView = 0;\n\n  /** @type {SelectionMode} */\n  #selectionMode = DatePickerControlElement.SELECTION_MODE_SINGLE;\n\n  /** @type {Date} */\n  #selectedBeginDate;\n\n  /** @type {Date} */\n  #selectedEndDate;\n\n  /** @type {(date: Date) => boolean} */\n  #isDateDisabled = (date) => {\n    return false;\n  };\n\n  async connectedCallback() {\n    this.#shadowRoot.adoptedStyleSheets = DatePickerViewElement.#STYLES;\n\n    this.#render();\n\n    const controlCtx = await this.requireContext(DatePickerControlElement);\n    const viewCtx = await this.requireContext(DatePickerViewElement);\n\n    this.#selectionMode = controlCtx.selectionMode;\n    this.#selectedBeginDate = controlCtx.beginDateValue;\n    this.#selectedEndDate = controlCtx.endDateValue;\n\n    controlCtx.addEventListener(SelectedDateSetEvent.EVENT_TYPE, this.#handleSelectedDateSet);\n    controlCtx.addEventListener(SelectionModeSetEvent.EVENT_TYPE, this.#handleSelectionModeSet);\n    viewCtx.addEventListener(CalendarViewChangeEvent.EVENT_TYPE, this.#handleCalendarViewChange);\n\n    const defaultDate = this.#selectedBeginDate instanceof Date\n      ? this.#selectedBeginDate\n      : new Date();\n\n    this.#setYearMonthView(\n      defaultDate.getUTCFullYear(),\n      defaultDate.getUTCMonth(),\n    );\n  }\n\n  async disconnectedCallback() {\n    const controlCtx = await this.requireContext(DatePickerControlElement);\n    const viewCtx = await this.requireContext(DatePickerViewElement);\n\n    controlCtx.removeEventListener(SelectedDateSetEvent.EVENT_TYPE, this.#handleSelectedDateSet);\n    controlCtx.removeEventListener(SelectionModeSetEvent.EVENT_TYPE, this.#handleSelectionModeSet);\n    viewCtx.removeEventListener(CalendarViewChangeEvent.EVENT_TYPE, this.#handleCalendarViewChange);\n  }\n\n  get monthNames() {\n    const formatter = new Intl.DateTimeFormat(this.#locale, { month: 'long' });\n    const monthIndexes = [...Array(12).keys()];\n    return monthIndexes.map((monthIndex) => {\n      const date = new Date(2000, monthIndex);\n      return formatter.format(date);\n    });\n  }\n\n  get dayShortNames() {\n    const formatter = new Intl.DateTimeFormat(this.#locale, { weekday: 'short' });\n    const dayIndexes = [...Array(7).keys()];\n    const firstDayOfWeekDate = new Date(2000, 0, 1);\n    firstDayOfWeekDate.setUTCDate(firstDayOfWeekDate.getUTCDate() - firstDayOfWeekDate.getUTCDay());\n    return dayIndexes.map((dayIndex) => {\n      const date = new Date(firstDayOfWeekDate);\n      date.setUTCDate(date.getUTCDate() + dayIndex);\n      return formatter.format(date);\n    });\n  }\n\n  get yearView() {\n    return this.#yearView;\n  }\n\n  get monthIndexView() {\n    return this.#monthIndexView;\n  }\n\n  /**\n   * @param {Date} [date]\n   */\n  setSelectedBeginDate(date) {\n    if (isInvalidDate(date)) {\n      this.#selectedBeginDate = null;\n    }\n    else {\n      this.#selectedBeginDate = date;\n    }\n\n    this.#selectedEndDate = null;\n\n    this.#patchRangeSelection();\n  }\n\n  /**\n   * @param {Date} [date]\n   */\n  setSelectedEndDate(date) {\n    if (!(this.#selectedBeginDate instanceof Date)) {\n      throw new Error('Begin date must be set first');\n    }\n\n    if (isInvalidDate(date)) {\n      this.#selectedEndDate = null;\n    }\n    else {\n      if (date.getTime() < this.#selectedBeginDate.getTime()) {\n        this.setSelectedBeginDate(date);\n        return;\n      }\n\n      this.#selectedEndDate = new Date(date);\n    }\n\n    this.#patchRangeSelection();\n  }\n\n  /**\n   * @param {(date: Date) => boolean} filterFn\n   */\n  async setDisabledFilter(filterFn) {\n    this.#isDateDisabled = filterFn;\n\n    const viewCtx = await this.requireContext(DatePickerViewElement);\n\n    viewCtx.dispatchEvent(new CalendarViewChangeEvent());\n  }\n\n  /**\n   * @param {number} year\n   * @param {number} monthIndex\n   */\n  async #setYearMonthView(year, monthIndex) {\n    this.#yearView = year;\n    this.#monthIndexView = monthIndex;\n    const monthLabel = this.monthNames[monthIndex];\n\n    this.#monthSelect.selectedIndex = monthIndex;\n    this.#yearInput.value = year.toString();\n\n    const viewCtx = await this.requireContext(DatePickerViewElement);\n\n    viewCtx.dispatchEvent(new YearMonthViewChangeEvent(\n      year,\n      monthIndex,\n      monthLabel,\n    ));\n\n    viewCtx.dispatchEvent(new CalendarViewChangeEvent());\n  }\n\n  /**\n   * @param {Event} event\n   */\n  #handleCalendarViewChange = (event) => {\n    if (event instanceof CalendarViewChangeEvent) {\n      const newCalendar = this.#renderCalendar();\n      this.#calendarTbody.replaceWith(newCalendar);\n      this.#calendarTbody = newCalendar;\n      this.#patchRangeSelection();\n    }\n  };\n\n  get #datesByWeekView() {\n    const year = this.yearView;\n    const monthIndex = this.monthIndexView;\n\n    const beginOfMonthDate = new Date(year, monthIndex, 1, 0, 0, 0, 0);\n    const beginOfWeekOfMonthDate = new Date(beginOfMonthDate);\n    beginOfWeekOfMonthDate.setUTCDate(beginOfWeekOfMonthDate.getUTCDate() - beginOfWeekOfMonthDate.getUTCDay());\n\n    const endOfMonthDate = new Date(year, monthIndex + 1, 0, 0, 0, 0, 0);\n    const endOfWeekOfMonthDate = new Date(endOfMonthDate);\n    endOfWeekOfMonthDate.setUTCDate(endOfWeekOfMonthDate.getUTCDate() + (6 - endOfWeekOfMonthDate.getUTCDay()));\n\n    let date = new Date(beginOfWeekOfMonthDate);\n\n    const weeksView = [\n      {\n        dates: [\n          {\n            date: new Date(date),\n            isCurrMonth: false,\n            isPrevMonth: true,\n            isNextMonth: false,\n            isToday: false,\n            isWeekend: false,\n            isDisabled: false,\n          },\n        ].slice(0, 0),\n      },\n    ];\n\n    let dayIndex = 0;\n\n    const selectedDateIsoString = isInvalidDate(this.#selectedBeginDate) ? null : dateToString(this.#selectedBeginDate);\n\n    while (date.getTime() <= endOfWeekOfMonthDate.getTime() || weeksView.length <= 6) {\n      const latestWeek = weeksView[weeksView.length - 1];\n\n      const dateDayIndex = date.getUTCDay();\n      const dateMonthIndex = date.getUTCMonth();\n      const dateYear = date.getUTCFullYear();\n\n      const yearViewDiff = (dateYear - this.yearView) * 12;\n\n      const isCurrMonth = (yearViewDiff + dateMonthIndex) === this.monthIndexView;\n      const isPrevMonth = (yearViewDiff + dateMonthIndex) < this.monthIndexView;\n      const isNextMonth = (yearViewDiff + dateMonthIndex) > this.monthIndexView;\n      const isToday = dateToString(date) === selectedDateIsoString;\n      const isWeekend = dateDayIndex === 0 || dateDayIndex === 6;\n      const isDisabled = typeof this.#isDateDisabled === 'function'\n        ? this.#isDateDisabled(date)\n        : false;\n\n      latestWeek.dates.push({\n        date: new Date(date),\n        numericDate: dateToNumber(date),\n        isCurrMonth,\n        isPrevMonth,\n        isNextMonth,\n        isToday,\n        isWeekend,\n        isDisabled,\n      });\n\n      date.setUTCDate(date.getUTCDate() + 1);\n\n      dayIndex++;\n\n      if (dayIndex === 7) {\n        weeksView.push({\n          dates: [],\n        });\n\n        dayIndex = 0;\n      }\n    }\n\n    return weeksView;\n  }\n\n  /**\n   * @param {string} name\n   */\n  #id(name) {\n    return `${name}-${this.#idSufix}`;\n  }\n\n  get #locale() {\n    const locales = this.lang || 'en';\n    return locales;\n  }\n\n  #viewPrevMonth() {\n    const monthIndex = this.#monthSelect.selectedIndex;\n    const year = parseInt(this.#yearInput.value, 10);\n    const prevMonthIndex = monthIndex - 1;\n    if (prevMonthIndex < 0) {\n      this.#monthSelect.selectedIndex = 11;\n      this.#yearInput.value = (year - 1).toString();\n      this.#setYearMonthView(year - 1, 11);\n    }\n    else {\n      this.#monthSelect.selectedIndex = prevMonthIndex;\n      this.#setYearMonthView(year, prevMonthIndex);\n    }\n  }\n\n  #viewNextMonth() {\n    const monthIndex = this.#monthSelect.selectedIndex;\n    const year = parseInt(this.#yearInput.value, 10);\n    const nextMonthIndex = monthIndex + 1;\n    if (nextMonthIndex > 11) {\n      this.#monthSelect.selectedIndex = 0;\n      this.#yearInput.value = (year + 1).toString();\n      this.#setYearMonthView(year + 1, 0);\n    }\n    else {\n      this.#monthSelect.selectedIndex = nextMonthIndex;\n      this.#setYearMonthView(year, nextMonthIndex);\n    }\n  }\n\n  /**\n   * @param {Date} date\n   */\n  async #handleDateSelect(date) {\n    if (this.#selectionMode === DatePickerControlElement.SELECTION_MODE_SINGLE) {\n      if (this.#selectedBeginDate instanceof Date) {\n        if (this.#selectedBeginDate.getTime() === date.getTime()) {\n          this.setSelectedBeginDate(null);\n        }\n        else {\n          this.setSelectedBeginDate(date);\n        }\n      }\n      else {\n        this.setSelectedBeginDate(date);\n      }\n    }\n    else if (this.#selectionMode === DatePickerControlElement.SELECTION_MODE_RANGE) {\n      if (this.#selectedBeginDate instanceof Date) {\n        if (date.getTime() < this.#selectedBeginDate.getTime()) {\n          this.setSelectedBeginDate(date);\n        }\n        else {\n          if (this.#selectedBeginDate.getTime() === date.getTime()) {\n            this.setSelectedBeginDate(null);\n          }\n          else {\n            /**\n             * What happens when begin date and end date has been set?\n             */\n            if (this.#selectedEndDate instanceof Date) {\n              /**\n               * USE CASE 1: Reset\n               */\n              this.setSelectedBeginDate(date);\n\n              /**\n               * USE CASE 2: Set end date\n               */\n              // if (date.getTime() === this.#selectedEndDate.getTime()) {\n              //   this.setSelectedEndDate(null);\n              // }\n              // else {\n              //   this.setSelectedEndDate(date);\n              // }\n            }\n            else {\n              this.setSelectedEndDate(date);\n            }\n          }\n        }\n      }\n      else {\n        this.setSelectedBeginDate(date);\n      }\n    }\n    else {\n      throw new Error('Invalid selection mode: ' + this.#selectionMode);\n    }\n\n    const controlCtx = await this.requireContext(DatePickerControlElement);\n\n    controlCtx.dispatchEvent(new SelectedDateChangeEvent({\n      beginDate: this.#selectedBeginDate,\n      endDate: this.#selectedEndDate,\n    }));\n  }\n\n  /**\n   * @param {Event} event\n   */\n  #handleSelectionModeSet = (event) => {\n    if (event instanceof SelectionModeSetEvent) {\n      this.#selectionMode = event.detail.selectionMode;\n      this.setSelectedEndDate(null);\n    }\n  };\n\n  /**\n   * @param {Event} event\n   */\n  #handleSelectedDateSet = (event) => {\n    if (event instanceof SelectedDateSetEvent) {\n      this.#selectedBeginDate = event.detail.beginDate;\n      this.#selectedEndDate = event.detail.endDate;\n      this.#patchRangeSelection();\n    }\n  };\n\n  #render() {\n    this.#shadowRoot.appendChild(el('section', () => [\n      el('header', () => [\n        this.#yearMonthControlsSlot = el('slot', () => [\n          at('name', 'year-month-controls'),\n          el('label', () => [\n            at('class', 'sr-only'),\n            at('for', this.#id('month-select')),\n            tx('Month'),\n          ]),\n          this.#monthSelect = el('select', () => [\n            at('id', this.#id('month-select')),\n            at('name', 'month'),\n            at('aria-label', 'Month'),\n            on('change', (event) => {\n              event.preventDefault();\n              const monthIndex = this.#monthSelect.selectedIndex;\n              const year = parseInt(this.#yearInput.value, 10);\n              this.#setYearMonthView(year, monthIndex);\n            }),\n            ...this.monthNames.map((monthName, index) => {\n              return el('option', () => [\n                at('value', monthName),\n                ...(index === this.monthIndexView ? [at('selected', 'selected')] : []),\n                tx(monthName),\n              ]);\n            }),\n          ]),\n          el('label', () => [\n            at('class', 'sr-only'),\n            at('for', this.#id('year-input')),\n            tx('Year'),\n          ]),\n          this.#yearInput = el('input', () => [\n            at('id', this.#id('year-input')),\n            at('type', 'number'),\n            at('name', 'year'),\n            at('aria-label', 'Year'),\n            at('value', this.yearView.toString()),\n            at('min', this.#minYear.toString()), // Minimum save year for javascript Date object as of 2024-01-30\n            at('max', this.#maxYear.toString()), // Maximum save year for javascript Date object as of 2024-01-30\n            on('change', (event) => {\n              const monthIndex = this.#monthSelect.selectedIndex;\n              const year = parseInt(this.#yearInput.value, 10);\n              if (year < this.#minYear) {\n                event.preventDefault();\n                this.#yearInput.setCustomValidity(`Year must be greater than or equal to ${this.#minYear}`);\n                this.#yearInput.reportValidity();\n              }\n              else if (year > this.#maxYear) {\n                event.preventDefault();\n                this.#yearInput.setCustomValidity(`Year must be less than or equal to ${this.#maxYear}`);\n                this.#yearInput.reportValidity();\n              }\n              this.#setYearMonthView(year, monthIndex);\n            }),\n          ]),\n        ]),\n\n        el('div', () => [\n          at('class', 'year-month-pagination'),\n          el('button', () => [\n            at('type', 'button'),\n            on('click', (event) => {\n              event.preventDefault();\n              this.#viewPrevMonth();\n            }),\n            el('slot', () => [\n              at('name', 'prev-icon'),\n              (slot) => slot.innerHTML = `\n                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 -960 960 960\" height=\"24\" width=\"24\" title=\"Previous\"><path fill=\"currentColor\" d=\"m432-480 156 156q11 11 11 28t-11 28q-11 11-28 11t-28-11L348-452q-6-6-8.5-13t-2.5-15q0-8 2.5-15t8.5-13l184-184q11-11 28-11t28 11q11 11 11 28t-11 28L432-480Z\"/></svg>\n              `,\n            ]),\n          ]),\n          el('button', () => [\n            at('type', 'button'),\n            on('click', (event) => {\n              event.preventDefault();\n              this.#viewNextMonth();\n            }),\n            el('slot', () => [\n              at('name', 'next-icon'),\n              (slot) => slot.innerHTML = `\n                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 -960 960 960\" height=\"24\" width=\"24\" title=\"Next\"><path fill=\"currentColor\" d=\"M504-480 348-636q-11-11-11-28t11-28q11-11 28-11t28 11l184 184q6 6 8.5 13t2.5 15q0 8-2.5 15t-8.5 13L404-268q-11 11-28 11t-28-11q-11-11-11-28t11-28l156-156Z\"/></svg>\n              `,\n            ]),\n          ]),\n        ]),\n      ]),\n\n      el('table', () => [\n        el('thead', () => [\n          el('tr', () => [\n            ...this.dayShortNames.map((dayShortName) => {\n              return el('th', () => [\n                el('span', () => [\n                  tx(dayShortName),\n                ]),\n              ]);\n            }),\n          ]),\n        ]),\n\n        this.#calendarTbody = el('tbody', () => []),\n      ]),\n    ]));\n  }\n\n  #renderCalendar() {\n    return el('tbody', () => [\n      ...this.#datesByWeekView.map((week) => {\n        return el('tr', () => [\n          ...week.dates.map((date) => {\n            return el('td', () => [\n              el('label', () => [\n                at('class', [\n                  ...(date.isWeekend ? ['weekend'] : []),\n                  ...(date.isCurrMonth ? [] : ['other-month']),\n                ].join(' ')),\n                el('input', () => [\n                  at('type', 'checkbox'),\n                  at('name', 'date'),\n                  at('value', date.date.toISOString()),\n                  ...(date.isDisabled ? [at('disabled', 'disabled')] : []),\n                  ...(date.isToday ? [at('checked', 'checked')] : []),\n                  on('change', (event) => {\n                    try {\n                      this.#handleDateSelect(date.date);\n                      if (date.isPrevMonth) {\n                        this.#viewPrevMonth();\n                      }\n                      else if (date.isNextMonth) {\n                        this.#viewNextMonth();\n                      }\n                    }\n                    catch (error) {\n                      event.preventDefault();\n                      throw error;\n                    }\n                  }),\n                ]),\n                el('span', () => [\n                  el('span', () => [\n                    tx(date.date.getUTCDate().toString().padStart(2, '0')),\n                  ]),\n                ]),\n              ]),\n            ]);\n          }),\n        ]);\n      }),\n    ]);\n  }\n\n  #patchRangeSelection() {\n    if (!(this.#calendarTbody instanceof HTMLTableSectionElement)) {\n      return;\n    }\n\n    const beginDate = this.#selectedBeginDate;\n    const endDate = this.#selectedEndDate;\n\n    const beginNumericDate = dateToNumber(beginDate);\n    const endNumericDate = dateToNumber(endDate);\n\n    const isSingleSelect = this.#selectionMode === DatePickerControlElement.SELECTION_MODE_SINGLE;\n\n    const treeWalker = document.createTreeWalker(\n      this.#calendarTbody,\n      NodeFilter.SHOW_ELEMENT,\n      {\n        acceptNode(node) {\n          return (node instanceof HTMLInputElement && node.name === 'date')\n            ? NodeFilter.FILTER_ACCEPT\n            : NodeFilter.FILTER_SKIP;\n        },\n      },\n    );\n\n    let input = treeWalker.currentNode;\n\n    while (input instanceof Node) {\n      input = treeWalker.nextNode();\n\n      if (!(input instanceof HTMLInputElement)) {\n        continue;\n      }\n\n      const label = input.labels.item(0);\n\n      if (!(label instanceof HTMLLabelElement)) {\n        continue;\n      }\n\n      // Reset label state\n      label.classList.remove('range-selected');\n      label.classList.remove('range-selected-first');\n      label.classList.remove('range-selected-last');\n\n      const date = new Date(input.value);\n      const numericDate = dateToNumber(date);\n\n      const isFirst = numericDate === beginNumericDate;\n      const isLast = numericDate === endNumericDate;\n\n      if (isFirst || isLast) {\n        input.checked = true;\n        input.setAttribute('checked', 'checked');\n      }\n      else {\n        input.checked = false;\n        input.removeAttribute('checked');\n      }\n\n      if (isSingleSelect) {\n        continue;\n      }\n\n      const isInRange = true\n        && (numericDate >= beginNumericDate)\n        && (numericDate <= endNumericDate);\n\n      if (isInRange) {\n        label.classList.add('range-selected');\n      }\n\n      if (isFirst) {\n        label.classList.add('range-selected-first');\n      }\n      else if (isLast) {\n        label.classList.add('range-selected-last');\n      }\n    }\n  }\n}\n", "// @ts-check\n\nimport { DatePickerViewElement } from '../elements/date-picker-view.js';\n\ncustomElements.define('f-date-picker-view', DatePickerViewElement);\n", "// @ts-check\n\nimport '../components/f-date-picker-view.js';\nimport { PickedDateSetEvent } from '../events/picked-date-set-event.js';\nimport { SelectionModeSetEvent } from '../events/selection-mode-set-event.js';\nimport { at, el } from '../tools/dom.js';\n\nimport { DatePickerControlElement } from './date-picker-control.js';\n\nexport class DatePickerInlineElement extends DatePickerControlElement {\n  static #STYLES = (function () {\n    const style = new CSSStyleSheet();\n\n    style.replace(`\n    `);\n\n    return [style];\n  })();\n\n  static get formAssociated() {\n    return true;\n  }\n\n  static get observedAttributes() {\n    return [\n      'value',\n      'time-unit',\n      'selection-mode',\n    ];\n  }\n\n  #shadowRoot = this.attachShadow({ mode: 'closed' });\n\n  connectedCallback() {\n    super.connectedCallback();\n\n    this.#shadowRoot.adoptedStyleSheets = DatePickerInlineElement.#STYLES;\n\n    this.#render();\n  }\n\n  /**\n   * @param {string} name\n   * @param {string} oldValue\n   * @param {any} newValue\n   */\n  async attributeChangedCallback(name, oldValue, newValue) {\n    if (name === 'value') {\n      this.value = newValue;\n\n      const controlCtx = await this.requireContext(DatePickerControlElement);\n\n      controlCtx.dispatchEvent(new PickedDateSetEvent({\n        beginDate: this.beginDateValue,\n        endDate: this.endDateValue,\n      }));\n    }\n    else if (name === 'time-unit') {\n      this.timeUnit = newValue;\n    }\n    else if (name === 'selection-mode') {\n      this.selectionMode = newValue;\n\n      const controlCtx = await this.requireContext(DatePickerControlElement);\n\n      controlCtx.dispatchEvent(new SelectionModeSetEvent(this.selectionMode));\n    }\n  }\n\n  #render() {\n    this.#shadowRoot.appendChild(\n      el('slot', () => [\n        at('name', 'date-picker-view'),\n        el('f-date-picker-view', () => []),\n      ]),\n    );\n  }\n}\n", "// @ts-check\n\nimport { DatePickerInlineElement } from '../elements/date-picker-inline.js';\n\ncustomElements.define('f-date-picker-inline', DatePickerInlineElement);\n", "// @ts-check\n\nimport { YearMonthViewChangeEvent } from '../events/year-month-view-change-event.js';\nimport { tx } from '../tools/dom.js';\n\nimport { ContextAwareElement } from './context-aware.js';\nimport { DatePickerViewElement } from './date-picker-view.js';\n\nexport class DatePickerMonthViewElement extends ContextAwareElement {\n  #shadowRoot = this.attachShadow({ mode: 'closed' });\n\n  /** @type {Text} */\n  #text;\n\n  async connectedCallback() {\n    this.#render();\n\n    const viewCtx = await this.requireContext(DatePickerViewElement);\n\n    viewCtx.addEventListener(YearMonthViewChangeEvent.EVENT_TYPE, this.#handleMonthViewChange);\n\n    this.#text.nodeValue = viewCtx.monthNames[viewCtx.monthIndexView];\n  }\n\n  async disconnectedCallback() {\n    const viewCtx = await this.requireContext(DatePickerViewElement);\n\n    viewCtx.removeEventListener(YearMonthViewChangeEvent.EVENT_TYPE, this.#handleMonthViewChange);\n  }\n\n  /**\n   * @param {Event} event\n   */\n  #handleMonthViewChange = (event) => {\n    if (event instanceof YearMonthViewChangeEvent) {\n      this.#text.nodeValue = event.detail.monthLabel.toString();\n    }\n  };\n\n  #render() {\n    this.#shadowRoot.appendChild(this.#text = tx(''));\n  }\n}\n", "// @ts-check\n\nimport { DatePickerMonthViewElement } from '../elements/date-picker-month-view.js';\n\ncustomElements.define('f-date-picker-month-view', DatePickerMonthViewElement);\n", "// @ts-check\n\nimport { YearMonthViewChangeEvent } from '../events/year-month-view-change-event.js';\nimport { tx } from '../tools/dom.js';\n\nimport { ContextAwareElement } from './context-aware.js';\nimport { DatePickerViewElement } from './date-picker-view.js';\n\nexport class DatePickerYearViewElement extends ContextAwareElement {\n  static get requiredContexts() {\n    return [\n      DatePickerViewElement,\n    ];\n  }\n\n  #shadowRoot = this.attachShadow({ mode: 'closed' });\n\n  /** @type {Text} */\n  #text;\n\n  async connectedCallback() {\n    this.#render();\n\n    const viewCtx = await this.requireContext(DatePickerViewElement);\n\n    viewCtx.addEventListener(YearMonthViewChangeEvent.EVENT_TYPE, this.#handleChange);\n  }\n\n  async disconnectedCallback() {\n    const viewCtx = await this.requireContext(DatePickerViewElement);\n\n    viewCtx.removeEventListener(YearMonthViewChangeEvent.EVENT_TYPE, this.#handleChange);\n\n    this.#text.nodeValue = viewCtx.yearView?.toString();\n  }\n\n  /**\n   * @param {CustomEvent} event\n   */\n  #handleChange = (event) => {\n    if (event instanceof YearMonthViewChangeEvent) {\n      this.#text.nodeValue = event.detail.year.toString();\n    }\n  };\n\n  #render() {\n    this.#shadowRoot.appendChild(this.#text = tx(''));\n  }\n}\n", "// @ts-check\n\nimport { DatePickerYearViewElement } from '../elements/date-picker-year-view.js';\n\ncustomElements.define('f-date-picker-year-view', DatePickerYearViewElement);\n", "// @ts-check\n\nimport { DateRelatedEvent } from './date-related-event.js';\n\n/** @typedef {import('../tools/date.js').DateRange} DateRange */\n/** @typedef {import('./date-related-event.js').DateRelatedEventDetail} DateRelatedEventDetail */\n\nexport class PickedDateChangeEvent extends DateRelatedEvent {\n  static get EVENT_TYPE() {\n    return 'change';\n  }\n\n  /**\n   * @param {DateRange} dateRange\n   * @param {CustomEventInit<DateRelatedEventDetail>} [options]\n   */\n  constructor(dateRange, options) {\n    super(PickedDateChangeEvent.EVENT_TYPE, dateRange, options);\n  }\n}\n", "// @ts-check\n\nimport '../components/f-date-picker-view.js';\nimport { PickedDateChangeEvent } from '../events/picked-date-change-event.js';\nimport { PickedDateSetEvent } from '../events/picked-date-set-event.js';\nimport { SelectedDateChangeEvent } from '../events/selected-date-change-event.js';\nimport { SelectedDateSetEvent } from '../events/selected-date-set-event.js';\nimport { dateRangeToString, dateToString } from '../tools/date.js';\nimport { at, el, on, tx } from '../tools/dom.js';\n\nimport { DatePickerControlElement } from './date-picker-control.js';\n\nexport class DatePickerDialogElement extends DatePickerControlElement {\n  static #STYLES = (function () {\n    const style = new CSSStyleSheet();\n\n    style.replace(`\n:host {\n  --si-input-button-height: 36px;\n  --si-submit-button-height: 36px;\n  --si-dialog-radius: 4px;\n  --si-dialog-padding: 16px;\n}\nbutton {\n  display: block;\n  padding: 0 8px;\n  height: var(--si-input-button-height);\n}\ndialog {\n  border: none;\n  padding: var(--si-dialog-padding);\n  border-radius: var(--si-dialog-radius);\n}\ndialog > form > slot > div {\n  display: flex;\n  justify-content: flex-end;\n  gap: 8px;\n  margin-top: 8px;\n}\ndialog > form > slot > div > button {\n  display: block;\n  padding: 0 8px;\n  height: var(--si-submit-button-height);\n}\n    `);\n\n    return [style];\n  })();\n\n  static get formAssociated() {\n    return true;\n  }\n\n  static get observedAttributes() {\n    return [\n      'open',\n      'value',\n    ];\n  }\n\n  #shadowRoot = this.attachShadow({ mode: 'closed' });\n\n  /** @type {Text} */\n  #buttonText;\n\n  /** @type {HTMLDialogElement} */\n  #dialog;\n\n  /** @type {HTMLFormElement} */\n  #form;\n\n  /** @type {Date} */\n  #selectedBeginDate;\n\n  /** @type {Date} */\n  #selectedEndDate;\n\n  async connectedCallback() {\n    const controlCtx = await this.requireContext(DatePickerControlElement);\n\n    controlCtx.addEventListener(PickedDateChangeEvent.EVENT_TYPE, this.#handlePickedDateChange);\n    controlCtx.addEventListener(PickedDateSetEvent.EVENT_TYPE, this.#handlePickedDateSet);\n    controlCtx.addEventListener(SelectedDateChangeEvent.EVENT_TYPE, this.#handleSelectedDateChange);\n\n    super.connectedCallback();\n\n    this.#shadowRoot.adoptedStyleSheets = DatePickerDialogElement.#STYLES;\n\n    this.#render();\n\n    this.#dialog.addEventListener('open', this.#handleDialogOpen);\n    this.#dialog.addEventListener('close', this.#handleDialogClose);\n\n    if (this.hasAttribute('open')) {\n      this.#openDatePicker();\n    }\n    else {\n      this.#closeDatePicker();\n    }\n\n    this.#updateButtonText();\n  }\n\n  async disconnectedCallback() {\n    this.#dialog.removeEventListener('open', this.#handleDialogOpen);\n    this.#dialog.removeEventListener('close', this.#handleDialogClose);\n\n    const controlCtx = await this.requireContext(DatePickerControlElement);\n\n    controlCtx.removeEventListener(PickedDateChangeEvent.EVENT_TYPE, this.#handlePickedDateChange);\n    controlCtx.removeEventListener(PickedDateSetEvent.EVENT_TYPE, this.#handlePickedDateSet);\n    controlCtx.removeEventListener(SelectedDateChangeEvent.EVENT_TYPE, this.#handleSelectedDateChange);\n  }\n\n  /**\n   * @param {string} name\n   * @param {string} oldValue\n   * @param {string} newValue\n   */\n  attributeChangedCallback(name, oldValue, newValue) {\n    if (name === 'open') {\n      if (newValue === null) {\n        this.#closeDatePicker();\n      }\n      else {\n        this.#openDatePicker();\n      }\n    }\n    else if (name === 'value') {\n      if (newValue === null) {\n        this.value = null;\n      }\n      else {\n        this.value = newValue;\n      }\n      this.#updateButtonText();\n    }\n  }\n\n  requestSubmit = () => {\n    this.#form.requestSubmit();\n  };\n\n  closeDatePicker() {\n    this.#closeDatePicker();\n  }\n\n  #updateButtonText() {\n    if (this.beginDateValue instanceof Date) {\n      if (this.#buttonText instanceof Text) {\n        this.#buttonText.nodeValue = `Selected Date: ${this.value}`;\n      }\n    }\n    else {\n      if (this.#buttonText instanceof Text) {\n        this.#buttonText.nodeValue = 'Select Date';\n      }\n    }\n  }\n\n  #openDatePicker = async () => {\n    if (this.#dialog instanceof HTMLDialogElement) {\n      const controlCtx = await this.requireContext(DatePickerControlElement);\n\n      controlCtx.dispatchEvent(new SelectedDateSetEvent({\n        beginDate: this.#selectedBeginDate,\n        endDate: this.#selectedEndDate,\n      }));\n\n      this.#dialog.showModal();\n\n      if (!this.hasAttribute('open')) {\n        this.setAttribute('open', '');\n      }\n    }\n  };\n\n  #closeDatePicker = () => {\n    if (this.#dialog instanceof HTMLDialogElement) {\n      this.#dialog.close();\n    }\n  };\n\n  #handleDialogOpen = async () => {\n    if (!this.hasAttribute('open')) {\n      this.setAttribute('open', '');\n    }\n  };\n\n  #handleDialogClose = () => {\n    if (this.hasAttribute('open')) {\n      this.removeAttribute('open');\n    }\n  };\n\n  /**\n   * @param {Event} event\n   */\n  #handleSelectedDateChange = (event) => {\n    if (event instanceof SelectedDateChangeEvent) {\n      const { beginDate, endDate } = event.detail;\n\n      this.#selectedBeginDate = beginDate;\n      this.#selectedEndDate = endDate;\n    }\n  };\n\n  /**\n   * @param {Event} event\n   */\n  #handlePickedDateChange = (event) => {\n    if (event instanceof PickedDateChangeEvent) {\n      this.#updateButtonText();\n    }\n  };\n\n  /**\n   * @param {Event} event\n   */\n  #handlePickedDateSet = (event) => {\n    if (event instanceof PickedDateSetEvent) {\n      const { beginDate, endDate } = event.detail;\n\n      this.#selectedBeginDate = beginDate;\n      this.#selectedEndDate = endDate;\n\n      this.#updateButtonText();\n    }\n  };\n\n  #handleFormSubmit = () => {\n    if (this.selectionMode === DatePickerControlElement.SELECTION_MODE_SINGLE) {\n      this.value = dateToString(this.#selectedBeginDate);\n    }\n    else if (this.selectionMode === DatePickerControlElement.SELECTION_MODE_RANGE) {\n      this.value = dateRangeToString({\n        beginDate: this.#selectedBeginDate,\n        endDate: this.#selectedEndDate,\n      });\n    }\n    else {\n      throw new Error('Invalid selection mode');\n    }\n\n    this.#updateButtonText();\n  };\n\n  #render() {\n    this.#shadowRoot.appendChild(el('div', () => [\n      el('slot', () => [\n        at('name', 'date-picker-controls'),\n        el('button', () => [\n          on('click', this.#openDatePicker),\n          this.#buttonText = tx('Select Date'),\n        ]),\n      ]),\n      this.#dialog = el('dialog', () => [\n        this.#form = el('form', () => [\n          at('method', 'dialog'),\n          on('submit', this.#handleFormSubmit),\n          el('slot', () => [\n            at('name', 'date-picker-view'),\n            el('f-date-picker-view', () => []),\n          ]),\n          el('slot', () => [\n            at('name', 'form-controls'),\n            el('div', () => [\n              el('button', () => [\n                at('type', 'button'),\n                on('click', this.#closeDatePicker),\n                tx('Cancel'),\n              ]),\n              el('button', () => [\n                at('type', 'submit'),\n                tx('Apply'),\n              ]),\n            ]),\n          ]),\n        ]),\n      ]),\n    ]));\n  }\n}\n", "// @ts-check\n\nimport { DatePickerDialogElement } from '../elements/date-picker-dialog.js';\n\ncustomElements.define('f-date-picker-dialog', DatePickerDialogElement);\n"],
  "mappings": "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",
  "names": ["CalendarViewChangeEvent", "_CalendarViewChangeEvent", "options", "DateRelatedEvent", "#beginDate", "#endDate", "type", "dateRange", "options", "SelectedDateChangeEvent", "_SelectedDateChangeEvent", "DateRelatedEvent", "dateRange", "options", "SelectedDateSetEvent", "_SelectedDateSetEvent", "DateRelatedEvent", "dateRange", "options", "SelectionModeSetEvent", "_SelectionModeSetEvent", "#selectionMode", "selectionMode", "options", "YearMonthViewChangeEvent", "_YearMonthViewChangeEvent", "#year", "#monthIndex", "year", "monthIndex", "monthLabel", "options", "dateRangeToString", "beginDate", "endDate", "isInvalidDate", "beginDateString", "dateToString", "endDateString", "date", "anyDate", "dateToNumber", "date", "isInvalidDate", "dateString", "dateToString", "dateStringToDate", "yearStr", "monthStr", "rawDateStr", "dateStr", "year", "month", "el", "tagNameOrElement", "propFn", "element", "props", "prop", "text", "at", "localName", "value", "attr", "tx", "data", "on", "type", "listener", "options", "bypassTypingListener", "ContextAwareElement", "constructor", "resolve", "reject", "element", "PickedDateSetEvent", "_PickedDateSetEvent", "DateRelatedEvent", "dateRange", "options", "DatePickerControlElement", "_DatePickerControlElement", "ContextAwareElement", "#AVAILABLE_TIME_UNITS", "#AVAILABLE_SELECTION_MODES", "#internals", "#timeUnit", "#selectionMode", "#beginDate", "#endDate", "timeUnit", "selectionMode", "dateFormatter", "dateToString", "value", "PickedDateSetEvent", "dateParserFn", "dateStringToDate", "beginDateStr", "endDateStr", "beginDate", "endDate", "isInvalidDate", "date", "isInvalidBeginDate", "isInvalidEndDate", "DatePickerViewElement", "ContextAwareElement", "#ID_INC", "#STYLES", "style", "#shadowRoot", "#idSufix", "_a", "#calendarTbody", "#yearInput", "#monthSelect", "#yearMonthControlsSlot", "#minYear", "#maxYear", "#yearView", "#monthIndexView", "#selectionMode", "DatePickerControlElement", "#selectedBeginDate", "#selectedEndDate", "#isDateDisabled", "date", "#render", "controlCtx", "viewCtx", "SelectedDateSetEvent", "#handleSelectedDateSet", "SelectionModeSetEvent", "#handleSelectionModeSet", "CalendarViewChangeEvent", "#handleCalendarViewChange", "defaultDate", "#setYearMonthView", "formatter", "#locale", "monthIndex", "dayIndexes", "firstDayOfWeekDate", "dayIndex", "isInvalidDate", "#patchRangeSelection", "filterFn", "year", "monthLabel", "YearMonthViewChangeEvent", "event", "newCalendar", "#renderCalendar", "#datesByWeekView", "beginOfMonthDate", "beginOfWeekOfMonthDate", "endOfMonthDate", "endOfWeekOfMonthDate", "weeksView", "selectedDateIsoString", "dateToString", "latestWeek", "dateDayIndex", "dateMonthIndex", "yearViewDiff", "isCurrMonth", "isPrevMonth", "isNextMonth", "isToday", "isWeekend", "isDisabled", "dateToNumber", "#id", "name", "#viewPrevMonth", "prevMonthIndex", "#viewNextMonth", "nextMonthIndex", "#handleDateSelect", "SelectedDateChangeEvent", "el", "at", "tx", "on", "monthName", "index", "slot", "dayShortName", "week", "error", "beginDate", "endDate", "beginNumericDate", "endNumericDate", "isSingleSelect", "treeWalker", "node", "input", "label", "numericDate", "isFirst", "isLast", "DatePickerViewElement", "DatePickerInlineElement", "_DatePickerInlineElement", "DatePickerControlElement", "#STYLES", "style", "#shadowRoot", "#render", "name", "oldValue", "newValue", "PickedDateSetEvent", "SelectionModeSetEvent", "el", "at", "DatePickerInlineElement", "DatePickerMonthViewElement", "ContextAwareElement", "#shadowRoot", "#text", "#render", "viewCtx", "DatePickerViewElement", "YearMonthViewChangeEvent", "#handleMonthViewChange", "event", "tx", "DatePickerMonthViewElement", "DatePickerYearViewElement", "ContextAwareElement", "DatePickerViewElement", "#shadowRoot", "#text", "#render", "YearMonthViewChangeEvent", "#handleChange", "viewCtx", "event", "tx", "DatePickerYearViewElement", "PickedDateChangeEvent", "_PickedDateChangeEvent", "DateRelatedEvent", "dateRange", "options", "DatePickerDialogElement", "_DatePickerDialogElement", "DatePickerControlElement", "#STYLES", "style", "#shadowRoot", "#buttonText", "#dialog", "#form", "#selectedBeginDate", "#selectedEndDate", "controlCtx", "PickedDateChangeEvent", "#handlePickedDateChange", "PickedDateSetEvent", "#handlePickedDateSet", "SelectedDateChangeEvent", "#handleSelectedDateChange", "#render", "#handleDialogOpen", "#handleDialogClose", "#openDatePicker", "#closeDatePicker", "#updateButtonText", "name", "oldValue", "newValue", "SelectedDateSetEvent", "event", "beginDate", "endDate", "#handleFormSubmit", "dateToString", "dateRangeToString", "el", "at", "on", "tx", "DatePickerDialogElement"]
}
