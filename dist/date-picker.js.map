{"version":3,"file":"date-picker.js","sources":["events/calendar-view-change-event.js","events/date-related-event.js","events/selected-date-change-event.js","events/selected-date-set-event.js","events/selection-mode-set-event.js","events/year-month-view-change-event.js","tools/date.js","tools/dom.js","elements/context-aware.js","events/picked-date-set-event.js","elements/date-picker-control.js","elements/date-picker-view.js","components/f-date-picker-view.js","elements/date-picker-inline.js","components/f-date-picker-inline.js","elements/date-picker-month-view.js","components/f-date-picker-month-view.js","elements/date-picker-year-view.js","components/f-date-picker-year-view.js","events/picked-date-change-event.js","elements/date-picker-dialog.js","components/f-date-picker-dialog.js"],"sourcesContent":["// @ts-check\n/**\n * @typedef {object} CalendarViewChangeEventDetail\n */\n/**\n * @extends {CustomEvent<CalendarViewChangeEventDetail>}\n */\nexport class CalendarViewChangeEvent extends CustomEvent {\n    static get EVENT_TYPE() {\n        return 'calendar-view-change';\n    }\n    /**\n     * @param {CustomEventInit<CalendarViewChangeEventDetail>} [options]\n     */\n    constructor(options) {\n        super(CalendarViewChangeEvent.EVENT_TYPE, options);\n    }\n}\n//# sourceMappingURL=calendar-view-change-event.js.map","// @ts-check\n/** @typedef {import('../tools/date.js').DateRange} DateRange */\n/** @typedef {DateRange} DateRelatedEventDetail */\n/**\n * @extends {CustomEvent<DateRelatedEventDetail>}\n */\nexport class DateRelatedEvent extends CustomEvent {\n    /** @type {Date} */\n    #beginDate;\n    /** @type {Date} */\n    #endDate;\n    /**\n     * @param {string} type\n     * @param {DateRange} dateRange\n     * @param {CustomEventInit<DateRelatedEventDetail>} [options]\n     */\n    constructor(type, dateRange, options) {\n        super(type, {\n            ...options,\n            detail: {\n                ...options?.detail,\n                ...dateRange,\n            },\n        });\n        this.#beginDate = dateRange.beginDate;\n        this.#endDate = dateRange.endDate;\n    }\n    get beginDate() {\n        return this.#beginDate;\n    }\n    get endDate() {\n        return this.#endDate;\n    }\n}\n//# sourceMappingURL=date-related-event.js.map","// @ts-check\nimport { DateRelatedEvent } from './date-related-event.js';\n/** @typedef {import('../tools/date.js').DateRange} DateRange */\n/** @typedef {import('./date-related-event.js').DateRelatedEventDetail} DateRelatedEventDetail */\nexport class SelectedDateChangeEvent extends DateRelatedEvent {\n    static get EVENT_TYPE() {\n        return 'selected-date-change';\n    }\n    /**\n     * @param {DateRange} dateRange\n     * @param {CustomEventInit<DateRelatedEventDetail>} [options]\n     */\n    constructor(dateRange, options) {\n        super(SelectedDateChangeEvent.EVENT_TYPE, dateRange, options);\n    }\n}\n//# sourceMappingURL=selected-date-change-event.js.map","// @ts-check\nimport { DateRelatedEvent } from './date-related-event.js';\n/** @typedef {import('../tools/date.js').DateRange} DateRange */\n/** @typedef {import('./date-related-event.js').DateRelatedEventDetail} DateRelatedEventDetail */\nexport class SelectedDateSetEvent extends DateRelatedEvent {\n    static get EVENT_TYPE() {\n        return 'selected-date-set';\n    }\n    /**\n     * @param {DateRange} dateRange\n     * @param {CustomEventInit<DateRelatedEventDetail>} [options]\n     */\n    constructor(dateRange, options) {\n        super(SelectedDateSetEvent.EVENT_TYPE, dateRange, options);\n    }\n}\n//# sourceMappingURL=selected-date-set-event.js.map","// @ts-check\n/** @typedef {import('../tools/date.js').DateRange} DateRange */\n/** @typedef {import('./date-related-event.js').DateRelatedEventDetail} DateRelatedEventDetail */\n/** @typedef {'single'|'range'} SelectionMode */\n/**\n * @typedef {object} SelectionModeSetEventDetail\n * @property {SelectionMode} selectionMode\n */\n/**\n * @extends {CustomEvent<SelectionModeSetEventDetail>}\n */\nexport class SelectionModeSetEvent extends CustomEvent {\n    static get EVENT_TYPE() {\n        return 'selection-mode-set';\n    }\n    /** @type {SelectionMode} */\n    #selectionMode;\n    /**\n     * @param {SelectionMode} selectionMode\n     * @param {CustomEventInit<SelectionModeSetEventDetail>} [options]\n     */\n    constructor(selectionMode, options) {\n        super(SelectionModeSetEvent.EVENT_TYPE, {\n            ...options,\n            detail: {\n                ...options?.detail,\n                selectionMode,\n            },\n        });\n        this.#selectionMode = selectionMode;\n    }\n    get selectionMode() {\n        return this.#selectionMode;\n    }\n}\n//# sourceMappingURL=selection-mode-set-event.js.map","// @ts-check\n/**\n * @typedef {object} YearMonthViewChangeEventDetail\n * @property {number} year\n * @property {number} monthIndex\n * @property {string} monthLabel\n */\n/**\n * @extends {CustomEvent<YearMonthViewChangeEventDetail>}\n */\nexport class YearMonthViewChangeEvent extends CustomEvent {\n    static get EVENT_TYPE() {\n        return 'year-month-view-change';\n    }\n    /** @type {number} */\n    #year;\n    /** @type {number} */\n    #monthIndex;\n    /**\n     * @param {number} year\n     * @param {number} monthIndex\n     * @param {string} monthLabel\n     * @param {CustomEventInit<YearMonthViewChangeEventDetail>} [options]\n     */\n    constructor(year, monthIndex, monthLabel, options) {\n        super(YearMonthViewChangeEvent.EVENT_TYPE, {\n            ...options,\n            detail: {\n                ...options?.detail,\n                year,\n                monthIndex,\n                monthLabel,\n            },\n        });\n        this.#year = year;\n        this.#monthIndex = monthIndex;\n    }\n    get year() {\n        return this.#year;\n    }\n    get monthIndex() {\n        return this.#monthIndex;\n    }\n}\n//# sourceMappingURL=year-month-view-change-event.js.map","// @ts-check\n/** @typedef {Date|number|string} AnyDate */\n/**\n * @typedef {object} DateRange\n * @property {Date} beginDate\n * @property {Date} endDate\n */\n/**\n * @param {DateRange} dateRange\n * @returns {string}\n */\nexport function dateRangeToString({ beginDate, endDate }) {\n    if (isInvalidDate(beginDate) || isInvalidDate(endDate)) {\n        return '';\n    }\n    const beginDateString = dateToString(beginDate);\n    const endDateString = dateToString(endDate);\n    return `${beginDateString}/${endDateString}`;\n}\n/**\n * Locale date string\n *\n * @param {Date} date\n * @returns {string}\n */\nexport function dateToString(date) {\n    if (isInvalidDate(date)) {\n        return '';\n    }\n    const year = date.getFullYear();\n    const month = date.getMonth() + 1;\n    const day = date.getDate();\n    return `${year}-${month.toString().padStart(2, '0')}-${day.toString().padStart(2, '0')}`;\n}\n/**\n * @param {AnyDate} [anyDate]\n * @returns {boolean}\n */\nexport function isInvalidDate(anyDate) {\n    if (!anyDate) {\n        return true;\n    }\n    const date = new Date(anyDate);\n    return date === null || isNaN(date.getTime());\n}\n/**\n * @param {string} dateRangeString\n * @returns {DateRange}\n */\nexport function dateRangeStringToDateRange(dateRangeString) {\n    const [beginDateString, endDateString] = dateRangeString.split('/');\n    const beginDate = new Date(beginDateString);\n    const endDate = new Date(endDateString);\n    return {\n        beginDate: isInvalidDate(beginDate) ? null : beginDate,\n        endDate: isInvalidDate(endDate) ? null : endDate,\n    };\n}\n/**\n * @param {Date} date\n * @returns {number}\n */\nexport function dateToNumber(date) {\n    if (isInvalidDate(date)) {\n        return 0;\n    }\n    const dateString = dateToString(date);\n    return parseInt(dateString.replace(/-/g, ''), 10);\n}\n/**\n * @param {string} dateString\n * @returns {Date}\n */\nexport function dateStringToDate(dateString) {\n    const [yearStr, monthStr, rawDateStr] = dateString.split('-');\n    const dateStr = (rawDateStr || '')\n        .split('T')[0]\n        .split(' ')[0];\n    const year = parseInt(yearStr, 10);\n    const month = parseInt(monthStr, 10);\n    const date = parseInt(dateStr, 10);\n    return new Date(year, month - 1, date);\n}\n//# sourceMappingURL=date.js.map","// @ts-check\n/**\n * @typedef {Node|Attr|string} BasicProp\n */\n/**\n * @template {keyof HTMLElementTagNameMap} TagName\n * @typedef {(element: HTMLElementTagNameMap[TagName]) => void} FnProp\n */\n/**\n * @template {keyof HTMLElementTagNameMap} TagName\n * @typedef {BasicProp|FnProp<TagName>|void} Prop\n */\n// let padding = 0;\n/**\n * @template {keyof HTMLElementTagNameMap} TagName\n * @template {HTMLElementTagNameMap[TagName]} Elm\n * @param {TagName|Elm} tagNameOrElement\n * @param {(element: HTMLElementTagNameMap[TagName]|Elm) => Array<Prop<TagName>>} propFn\n * @returns {HTMLElementTagNameMap[TagName]|Elm}\n */\nexport function el(tagNameOrElement, propFn) {\n    // console.log(`${' '.repeat(padding)}<${tagNameOrElement}>`);\n    // padding += 2;\n    /** @type {HTMLElementTagNameMap[TagName]|Elm} */\n    const element = (typeof tagNameOrElement === 'string')\n        ? document.createElement(tagNameOrElement)\n        : tagNameOrElement;\n    const props = propFn(element);\n    for (const prop of props) {\n        if (prop instanceof Attr) {\n            element.setAttributeNode(prop);\n        }\n        else if (prop instanceof Node) {\n            element.appendChild(prop);\n        }\n        else if (typeof prop === 'function') {\n            prop(element);\n        }\n        else if (typeof prop === 'string') {\n            const text = document.createTextNode(prop);\n            element.appendChild(text);\n        }\n    }\n    // padding -= 2;\n    // console.log(`${' '.repeat(padding)}</${tagNameOrElement}>`);\n    return element;\n}\n/**\n   * @param {string} localName\n   * @param {string} value\n   * @returns {Attr}\n   */\nexport function at(localName, value) {\n    const attr = document.createAttribute(localName);\n    attr.value = value;\n    return attr;\n}\n/**\n   * @param {string} data\n   * @returns {Text}\n   */\nexport function tx(data) {\n    const text = document.createTextNode(data);\n    return text;\n}\n/**\n   * @template {keyof HTMLElementTagNameMap} TagName\n   * @template {keyof HTMLElementEventMap} EventName\n   * @param {EventName} type\n   * @param {(this: HTMLElementTagNameMap[TagName], event: HTMLElementEventMap[EventName]) => void} listener\n   * @param {boolean|AddEventListenerOptions} [options]\n   * @returns {(element: HTMLElementTagNameMap[TagName]) => void}\n   */\nexport function on(type, listener, options) {\n    return function (element) {\n        /** @type {any} */\n        const bypassTypingListener = listener;\n        element.addEventListener(type, bypassTypingListener, options);\n    };\n}\n//# sourceMappingURL=dom.js.map","// @ts-check\nexport class ContextAwareElement extends HTMLElement {\n    /**\n     * Why is this method async?\n     * this method usually is called in connectedCallback hook of web component\n     * but unfortunately, before connectedCallback is called, the element is not yet attached to the DOM\n     * therefore the parentElement is invalid, and we need to wait for the next tick\n     *\n     * @template {ContextAwareElement} T\n     * @param {new () => T} constructor\n     * @param {number} [checkingInterval]\n     * @returns {Promise<T>}\n     */\n    async requireContext(constructor, checkingInterval = 50) {\n        return new Promise((resolve) => {\n            setTimeout(() => {\n                const context = this.#traceContext(constructor);\n                if (context instanceof constructor) {\n                    resolve(context);\n                }\n                else {\n                    const timeThreshold = 5000;\n                    const retryThreshold = timeThreshold / checkingInterval;\n                    let numOfRetries = 0;\n                    const interval = setInterval(() => {\n                        const context = this.#traceContext(constructor);\n                        if (context instanceof constructor) {\n                            clearInterval(interval);\n                            resolve(context);\n                        }\n                        else if (numOfRetries > retryThreshold) {\n                            clearInterval(interval);\n                            throw new Error(`Failed to find the context of ${constructor.name} after ${retryThreshold * checkingInterval}ms`);\n                        }\n                        else {\n                            numOfRetries++;\n                        }\n                    }, checkingInterval);\n                }\n            });\n        });\n    }\n    /**\n     * @template {ContextAwareElement} T\n     * @param {new () => T} constructor\n     * @returns {T}\n     */\n    #traceContext(constructor) {\n        /** @type {Node} */\n        let element = this;\n        while (element) {\n            if (element instanceof constructor) {\n                return element;\n            }\n            if (element instanceof ShadowRoot) {\n                element = element.host;\n            }\n            else {\n                element = element.parentNode;\n            }\n        }\n        return null;\n    }\n}\n//# sourceMappingURL=context-aware.js.map","// @ts-check\nimport { DateRelatedEvent } from './date-related-event.js';\n/** @typedef {import('../tools/date.js').DateRange} DateRange */\n/** @typedef {import('./date-related-event.js').DateRelatedEventDetail} DateRelatedEventDetail */\nexport class PickedDateSetEvent extends DateRelatedEvent {\n    static get EVENT_TYPE() {\n        return 'picked-date-set';\n    }\n    /**\n     * @param {DateRange} dateRange\n     * @param {CustomEventInit<DateRelatedEventDetail>} [options]\n     */\n    constructor(dateRange, options) {\n        super(PickedDateSetEvent.EVENT_TYPE, dateRange, options);\n    }\n}\n//# sourceMappingURL=picked-date-set-event.js.map","// @ts-check\nimport { PickedDateSetEvent } from '../events/picked-date-set-event.js';\nimport { dateStringToDate, dateToString, isInvalidDate } from '../tools/date.js';\nimport { ContextAwareElement } from './context-aware.js';\n/** @typedef {import('../events/selection-mode-set-event.js').SelectionMode} SelectionMode */\n/**\n * @typedef {'day'} TimeUnit\n */\nexport class DatePickerControlElement extends ContextAwareElement {\n    static get formAssociated() {\n        return true;\n    }\n    /** @type {TimeUnit} */\n    static TIME_UNIT_DAY = 'day';\n    /** @type {SelectionMode} */\n    static SELECTION_MODE_SINGLE = 'single';\n    /** @type {SelectionMode} */\n    static SELECTION_MODE_RANGE = 'range';\n    static #AVAILABLE_TIME_UNITS = [\n        DatePickerControlElement.TIME_UNIT_DAY,\n    ];\n    static #AVAILABLE_SELECTION_MODES = [\n        DatePickerControlElement.SELECTION_MODE_SINGLE,\n        DatePickerControlElement.SELECTION_MODE_RANGE,\n    ];\n    #internals = this.attachInternals();\n    /** @type {TimeUnit} */\n    #timeUnit = 'day';\n    /** @type {SelectionMode} */\n    #selectionMode = 'single';\n    /** @type {Date} */\n    #beginDate;\n    /** @type {Date} */\n    #endDate;\n    connectedCallback() {\n        if (this.hasAttribute('value')) {\n            this.value = this.getAttribute('value');\n        }\n        if (this.hasAttribute('time-unit')) {\n            /** @type {any} */\n            const timeUnit = this.getAttribute('time-unit');\n            this.timeUnit = timeUnit;\n        }\n        if (this.hasAttribute('selection-mode')) {\n            /** @type {any} */\n            const selectionMode = this.getAttribute('selection-mode');\n            this.selectionMode = selectionMode;\n        }\n    }\n    get timeUnit() {\n        return this.#timeUnit;\n    }\n    /**\n     * @param {TimeUnit} timeUnit\n     */\n    set timeUnit(timeUnit) {\n        if (!DatePickerControlElement.#AVAILABLE_TIME_UNITS.includes(timeUnit)) {\n            console.warn('Invalid time unit', timeUnit);\n            return;\n        }\n        this.#timeUnit = timeUnit;\n    }\n    get selectionMode() {\n        return this.#selectionMode;\n    }\n    /**\n     * @param {any} selectionMode\n     */\n    set selectionMode(selectionMode) {\n        if (!DatePickerControlElement.#AVAILABLE_SELECTION_MODES.includes(selectionMode)) {\n            console.warn('Invalid selection mode', selectionMode);\n            return;\n        }\n        this.#selectionMode = selectionMode;\n    }\n    get value() {\n        /** @type {(date: Date) => string} */\n        let dateFormatter = null;\n        if (this.#timeUnit === DatePickerControlElement.TIME_UNIT_DAY) {\n            dateFormatter = dateToString;\n        }\n        else {\n            throw new Error('Invalid time unit');\n        }\n        if (this.#selectionMode === DatePickerControlElement.SELECTION_MODE_RANGE) {\n            return (this.#beginDate instanceof Date && this.#endDate instanceof Date)\n                ? `${dateFormatter(this.#beginDate)}/${dateFormatter(this.#endDate)}`\n                : null;\n        }\n        else if (this.#selectionMode === DatePickerControlElement.SELECTION_MODE_SINGLE) {\n            return this.#beginDate instanceof Date\n                ? dateFormatter(this.#beginDate)\n                : null;\n        }\n        else {\n            throw new Error('Invalid selection mode');\n        }\n    }\n    /**\n     * @param {string} value\n     */\n    set value(value) {\n        if (!value) {\n            this.#beginDate = null;\n            this.#endDate = null;\n            this.#internals.setFormValue(null);\n            this.removeAttribute('value');\n            this.dispatchEvent(new PickedDateSetEvent({\n                beginDate: null,\n                endDate: null,\n            }));\n            return;\n        }\n        /** @type {(dateStr: string) => Date} */\n        let dateParserFn = null;\n        if (this.#timeUnit === DatePickerControlElement.TIME_UNIT_DAY) {\n            dateParserFn = dateStringToDate;\n        }\n        else {\n            throw new Error('Invalid time unit');\n        }\n        if (this.#selectionMode === DatePickerControlElement.SELECTION_MODE_RANGE) {\n            if (!value?.includes('/')) {\n                console.warn('Invalid date range format', value);\n                return;\n            }\n            const [beginDateStr, endDateStr] = value.split('/');\n            const beginDate = dateParserFn(beginDateStr);\n            const endDate = dateParserFn(endDateStr);\n            if (isInvalidDate(beginDate)) {\n                this.#beginDate = null;\n                this.#endDate = null;\n                this.#internals.setFormValue(null);\n                this.removeAttribute('value');\n                this.dispatchEvent(new PickedDateSetEvent({\n                    beginDate: null,\n                    endDate: null,\n                }));\n            }\n            else {\n                this.#beginDate = beginDate;\n                if (isInvalidDate(endDate)) {\n                    this.#endDate = null;\n                    this.#internals.setFormValue(beginDateStr);\n                    this.dispatchEvent(new PickedDateSetEvent({\n                        beginDate,\n                        endDate: null,\n                    }));\n                }\n                else {\n                    this.#endDate = endDate;\n                    this.#internals.setFormValue(`${beginDateStr}/${endDateStr}`);\n                    this.dispatchEvent(new PickedDateSetEvent({\n                        beginDate,\n                        endDate,\n                    }));\n                }\n            }\n        }\n        else if (this.#selectionMode === DatePickerControlElement.SELECTION_MODE_SINGLE) {\n            const date = dateParserFn(value);\n            if (isInvalidDate(date)) {\n                this.#beginDate = null;\n                this.#internals.setFormValue(null);\n                this.removeAttribute('value');\n                this.dispatchEvent(new PickedDateSetEvent({\n                    beginDate: null,\n                    endDate: null,\n                }));\n            }\n            else {\n                this.#beginDate = date;\n                this.#internals.setFormValue(dateToString(date));\n                this.dispatchEvent(new PickedDateSetEvent({\n                    beginDate: date,\n                    endDate: null,\n                }));\n            }\n        }\n        else {\n            throw new Error('Invalid selection mode');\n        }\n        const [beginDateStr, endDateStr] = (value ?? '').split('/');\n        const beginDate = beginDateStr\n            ? new Date(beginDateStr)\n            : new Date(Infinity);\n        const endDate = endDateStr\n            ? new Date(endDateStr)\n            : new Date(Infinity);\n        const isInvalidBeginDate = isInvalidDate(beginDate);\n        const isInvalidEndDate = isInvalidDate(endDate);\n        if (isInvalidBeginDate) {\n            this.#beginDate = null;\n            this.#endDate = null;\n            this.#internals.setFormValue(null);\n            this.removeAttribute('value');\n            this.dispatchEvent(new PickedDateSetEvent({\n                beginDate: null,\n                endDate: null,\n            }));\n        }\n        else {\n            const beginDateStr = dateToString(beginDate);\n            this.#beginDate = beginDate;\n            if (isInvalidEndDate) {\n                this.#endDate = null;\n                this.#internals.setFormValue(beginDateStr);\n                this.dispatchEvent(new PickedDateSetEvent({\n                    beginDate,\n                    endDate: null,\n                }));\n            }\n            else {\n                const endDateStr = dateToString(endDate);\n                this.#endDate = endDate;\n                this.#internals.setFormValue(`${beginDateStr}/${endDateStr}`);\n                this.dispatchEvent(new PickedDateSetEvent({\n                    beginDate,\n                    endDate,\n                }));\n            }\n        }\n    }\n    get beginDateValue() {\n        return this.#beginDate instanceof Date\n            ? new Date(this.#beginDate)\n            : null;\n    }\n    get endDateValue() {\n        return this.#endDate instanceof Date\n            ? new Date(this.#endDate)\n            : null;\n    }\n    get form() {\n        return this.#internals.form;\n    }\n    get name() {\n        return this.attributes.getNamedItem('name')?.nodeValue;\n    }\n    get type() {\n        return this.localName;\n    }\n    get validity() {\n        return this.#internals.validity;\n    }\n    get validationMessage() {\n        return this.#internals.validationMessage;\n    }\n    get willValidate() {\n        return this.#internals.willValidate;\n    }\n    checkValidity() {\n        return this.#internals.checkValidity();\n    }\n    reportValidity() {\n        return this.#internals.reportValidity();\n    }\n}\n//# sourceMappingURL=date-picker-control.js.map","// @ts-check\nvar _a;\nimport { CalendarViewChangeEvent } from '../events/calendar-view-change-event.js';\nimport { SelectedDateChangeEvent } from '../events/selected-date-change-event.js';\nimport { SelectedDateSetEvent } from '../events/selected-date-set-event.js';\nimport { SelectionModeSetEvent } from '../events/selection-mode-set-event.js';\nimport { YearMonthViewChangeEvent } from '../events/year-month-view-change-event.js';\nimport { dateToNumber, dateToString, isInvalidDate } from '../tools/date.js';\nimport { at, el, on, tx } from '../tools/dom.js';\nimport { ContextAwareElement } from './context-aware.js';\nimport { DatePickerControlElement } from './date-picker-control.js';\n/** @typedef {import('./date-picker-control.js').SelectionMode} SelectionMode */\nexport class DatePickerViewElement extends ContextAwareElement {\n    static #ID_INC = 0;\n    static #STYLES = (function () {\n        const style = new CSSStyleSheet();\n        style.replace(`\n:host {\n  --si-width: 336px;\n  --si-calendar-label-margin: 8px;\n  --si-calendar-label-text-color: dimgray;\n  --si-cell-size: calc(var(--si-width) / 7);\n  --si-cell-width: var(--si-cell-size);\n  --si-cell-height: var(--si-cell-size);\n  --si-cell-bg-color: white;\n  --si-cell-text-color: black;\n  --si-cell-font-weight: normal;\n  --si-cell-selected-bg-color: aliceblue;\n  --si-cell-selected-text-color: black;\n  --si-cell-selected-font-weight: bold;\n  --si-cell-weekend-text-color: red;\n  --si-cell-other-month-text-color: silver;\n  --si-cell-other-month-weekend-text-color: tomato;\n  --si-cell-font-size: 16px;\n  --si-inner-cell-selected-bg-color: lightblue;\n  --si-inner-cell-padding: 10px;\n  --si-inner-cell-size: min(\n    calc(var(--si-cell-width) - var(--si-inner-cell-padding)),\n    calc(var(--si-cell-height) - var(--si-inner-cell-padding))\n  );\n  --si-header-height: calc(var(--si-cell-size) - 4px);\n  --si-section-height: calc(\n      var(--si-header-height)\n      + var(--si-calendar-label-margin)\n      + var(--si-header-height)\n      + var(--si-calendar-label-margin)\n      + var(--si-cell-height)\n      + var(--si-cell-height)\n      + var(--si-cell-height)\n      + var(--si-cell-height)\n      + var(--si-cell-height)\n      + var(--si-cell-height)\n  );\n  --si-section-width: var(--si-width);\n  display: block;\n  font-family: sans-serif;\n  width: var(--si-width);\n  height: var(--si-section-height);\n}\n\n.sr-only {\n  display: none;\n  visibility: hidden;\n}\n\nsection {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: var(--si-section-width);\n  height: var(--si-section-height);\n}\n\nsection > header {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n  width: 100%;\n  height: var(--si-header-height);\n}\n\nsection > header > .year-month-pagination {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n}\n\nsection > header > .year-month-pagination > button {\n  box-sizing: border-box;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  width: var(--si-cell-size);\n  height: var(--si-header-height);\n  margin: 0;\n  padding: 0;\n  border: var(--si-button-border, 1px solid none);\n  background-color: var(--si-button-bg-color, none);\n}\n\nsection select[name=\"month\"] {\n  box-sizing: border-box;\n  height: var(--si-header-height);\n  padding: 0 8px;\n}\n\nsection input[name=\"year\"] {\n  box-sizing: border-box;\n  display: block;\n  width: 96px;\n  height: var(--si-header-height);\n  padding: 0 8px;\n}\n\nsection > table {\n  border-collapse: collapse;\n  border-spacing: 0;\n  width: var(--si-width);\n}\n\nsection > table,\nsection > table > thead > tr > th,\nsection > table > tbody > tr > td {\n  border: none;\n}\n\nsection > table > thead > tr > th,\nsection > table > thead > tr > th > span,\nsection > table > tbody > tr > td,\nsection > table > tbody > tr > td > label {\n  box-sizing: border-box;\n  width: var(--si-cell-width);\n  height: var(--si-cell-height);\n  padding: 0;\n  margin: 0;\n  font-size: var(--si-cell-font-size);\n}\n\nsection > table > thead > tr > th > span {\n  -webkit-user-select: none;\n  user-select: none;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  line-height: 1;\n  margin-top: var(--si-calendar-label-margin);\n  margin-bottom: var(--si-calendar-label-margin);\n  font-weight: normal;\n  color: var(--si-calendar-label-text-color);\n}\n\nsection > table > tbody > tr > td > label {\n  box-sizing: border-box;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n}\n\nsection > table > tbody > tr > td > label.range-selected {\n  background-color: var(--si-cell-selected-bg-color);\n}\n\nsection > table > tbody > tr > td > label.range-selected-first {\n  border-top-left-radius: 50%;\n  border-bottom-left-radius: 50%;\n}\n\nsection > table > tbody > tr > td > label.range-selected-last {\n  border-top-right-radius: 50%;\n  border-bottom-right-radius: 50%;\n}\n\nsection > table > tbody > tr > td > label > input {\n  display: none;\n  visibility: hidden;\n}\n\nsection > table > tbody > tr > td > label > span {\n  -webkit-user-select: none;\n  user-select: none;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  width: var(--si-inner-cell-size);\n  height: var(--si-inner-cell-size);\n  border-radius: 50%;\n}\n\nsection > table > tbody > tr > td > label > span > span {\n  display: block;\n  padding: 0;\n  margin: 0;\n  font-variant-numeric: normal;\n  line-height: 1;\n}\n\nsection > table > tbody > tr > td > label:has(input:checked) > span {\n  background-color: var(--si-inner-cell-selected-bg-color);\n}\n\nsection > table > tbody > tr > td > label:has(input:checked) > span > span {\n  color: var(--si-cell-selected-text-color, white);\n  font-weight: var(--si-cell-selected-font-weight, bold);\n}\n\nsection > table > tbody > tr > td > label.weekend > span > span {\n  color: var(--si-cell-weekend-text-color);\n}\n\nsection > table > tbody > tr > td > label.other-month > span > span {\n  color: var(--si-cell-other-month-text-color);\n}\n\nsection > table > tbody > tr > td > label.other-month.weekend > span > span {\n  color: var(--si-cell-other-month-weekend-text-color);\n}\n    `);\n        return [\n            style,\n        ];\n    })();\n    static get observedAttributes() {\n        return [\n            'lang',\n            'timeperiod',\n        ];\n    }\n    #shadowRoot = this.attachShadow({ mode: 'closed' });\n    #idSufix = _a.#ID_INC++;\n    /** @type {HTMLTableSectionElement} */\n    #calendarTbody;\n    /** @type {HTMLInputElement} */\n    #yearInput;\n    /** @type {HTMLSelectElement} */\n    #monthSelect;\n    /** @type {HTMLSlotElement} */\n    #yearMonthControlsSlot;\n    #minYear = 100;\n    #maxYear = 275759;\n    #yearView = 0;\n    #monthIndexView = 0;\n    /** @type {SelectionMode} */\n    #selectionMode = DatePickerControlElement.SELECTION_MODE_SINGLE;\n    /** @type {Date} */\n    #selectedBeginDate;\n    /** @type {Date} */\n    #selectedEndDate;\n    /** @type {(date: Date) => boolean} */\n    #isDateDisabled = (date) => {\n        return false;\n    };\n    async connectedCallback() {\n        this.#shadowRoot.adoptedStyleSheets = _a.#STYLES;\n        this.#render();\n        const controlCtx = await this.requireContext(DatePickerControlElement);\n        const viewCtx = await this.requireContext(_a);\n        this.#selectionMode = controlCtx.selectionMode;\n        this.#selectedBeginDate = controlCtx.beginDateValue;\n        this.#selectedEndDate = controlCtx.endDateValue;\n        controlCtx.addEventListener(SelectedDateSetEvent.EVENT_TYPE, this.#handleSelectedDateSet);\n        controlCtx.addEventListener(SelectionModeSetEvent.EVENT_TYPE, this.#handleSelectionModeSet);\n        viewCtx.addEventListener(CalendarViewChangeEvent.EVENT_TYPE, this.#handleCalendarViewChange);\n        const defaultDate = this.#selectedBeginDate instanceof Date\n            ? this.#selectedBeginDate\n            : new Date();\n        this.#setYearMonthView(defaultDate.getFullYear(), defaultDate.getMonth());\n    }\n    async disconnectedCallback() {\n        const controlCtx = await this.requireContext(DatePickerControlElement);\n        const viewCtx = await this.requireContext(_a);\n        controlCtx.removeEventListener(SelectedDateSetEvent.EVENT_TYPE, this.#handleSelectedDateSet);\n        controlCtx.removeEventListener(SelectionModeSetEvent.EVENT_TYPE, this.#handleSelectionModeSet);\n        viewCtx.removeEventListener(CalendarViewChangeEvent.EVENT_TYPE, this.#handleCalendarViewChange);\n    }\n    get monthNames() {\n        const formatter = new Intl.DateTimeFormat(this.#locale, { month: 'long' });\n        const monthIndexes = [...Array(12).keys()];\n        return monthIndexes.map((monthIndex) => {\n            const date = new Date(2000, monthIndex);\n            return formatter.format(date);\n        });\n    }\n    get dayShortNames() {\n        const formatter = new Intl.DateTimeFormat(this.#locale, { weekday: 'short' });\n        const dayIndexes = [...Array(7).keys()];\n        const firstDayOfWeekDate = new Date(2000, 0, 1);\n        firstDayOfWeekDate.setDate(firstDayOfWeekDate.getDate() - firstDayOfWeekDate.getDay());\n        return dayIndexes.map((dayIndex) => {\n            const date = new Date(firstDayOfWeekDate);\n            date.setDate(date.getDate() + dayIndex);\n            return formatter.format(date);\n        });\n    }\n    get yearView() {\n        return this.#yearView;\n    }\n    get monthIndexView() {\n        return this.#monthIndexView;\n    }\n    /**\n     * @param {Date} [date]\n     */\n    setSelectedBeginDate(date) {\n        if (isInvalidDate(date)) {\n            this.#selectedBeginDate = null;\n        }\n        else {\n            this.#selectedBeginDate = date;\n        }\n        this.#selectedEndDate = null;\n        this.#patchRangeSelection();\n    }\n    /**\n     * @param {Date} [date]\n     */\n    setSelectedEndDate(date) {\n        if (!(this.#selectedBeginDate instanceof Date)) {\n            throw new Error('Begin date must be set first');\n        }\n        if (isInvalidDate(date)) {\n            this.#selectedEndDate = null;\n        }\n        else {\n            if (date.getTime() < this.#selectedBeginDate.getTime()) {\n                this.setSelectedBeginDate(date);\n                return;\n            }\n            this.#selectedEndDate = new Date(date);\n        }\n        this.#patchRangeSelection();\n    }\n    /**\n     * @param {(date: Date) => boolean} filterFn\n     */\n    async setDisabledFilter(filterFn) {\n        this.#isDateDisabled = filterFn;\n        const viewCtx = await this.requireContext(_a);\n        viewCtx.dispatchEvent(new CalendarViewChangeEvent());\n    }\n    /**\n     * @param {number} year\n     * @param {number} monthIndex\n     */\n    async #setYearMonthView(year, monthIndex) {\n        this.#yearView = year;\n        this.#monthIndexView = monthIndex;\n        const monthLabel = this.monthNames[monthIndex];\n        this.#monthSelect.selectedIndex = monthIndex;\n        this.#yearInput.value = year.toString();\n        const viewCtx = await this.requireContext(_a);\n        viewCtx.dispatchEvent(new YearMonthViewChangeEvent(year, monthIndex, monthLabel));\n        viewCtx.dispatchEvent(new CalendarViewChangeEvent());\n    }\n    /**\n     * @param {Event} event\n     */\n    #handleCalendarViewChange = (event) => {\n        if (event instanceof CalendarViewChangeEvent) {\n            const newCalendar = this.#renderCalendar();\n            this.#calendarTbody.replaceWith(newCalendar);\n            this.#calendarTbody = newCalendar;\n            this.#patchRangeSelection();\n        }\n    };\n    get #datesByWeekView() {\n        const year = this.yearView;\n        const monthIndex = this.monthIndexView;\n        const beginOfMonthDate = new Date(year, monthIndex, 1, 0, 0, 0, 0);\n        const beginOfWeekOfMonthDate = new Date(beginOfMonthDate);\n        beginOfWeekOfMonthDate.setDate(beginOfWeekOfMonthDate.getDate() - beginOfWeekOfMonthDate.getDay());\n        const endOfMonthDate = new Date(year, monthIndex + 1, 0, 0, 0, 0, 0);\n        const endOfWeekOfMonthDate = new Date(endOfMonthDate);\n        endOfWeekOfMonthDate.setDate(endOfWeekOfMonthDate.getDate() + (6 - endOfWeekOfMonthDate.getDay()));\n        let date = new Date(beginOfWeekOfMonthDate);\n        const weeksView = [\n            {\n                dates: [\n                    {\n                        date: new Date(date),\n                        isCurrMonth: false,\n                        isPrevMonth: true,\n                        isNextMonth: false,\n                        isToday: false,\n                        isWeekend: false,\n                        isDisabled: false,\n                    },\n                ].slice(0, 0),\n            },\n        ];\n        let dayIndex = 0;\n        const selectedDateString = isInvalidDate(this.#selectedBeginDate) ? null : dateToString(this.#selectedBeginDate);\n        while (date.getTime() <= endOfWeekOfMonthDate.getTime() || weeksView.length <= 6) {\n            const latestWeek = weeksView[weeksView.length - 1];\n            const dateDayIndex = date.getDay();\n            const dateMonthIndex = date.getMonth();\n            const dateYear = date.getFullYear();\n            const yearViewDiff = (dateYear - this.yearView) * 12;\n            const isCurrMonth = (yearViewDiff + dateMonthIndex) === this.monthIndexView;\n            const isPrevMonth = (yearViewDiff + dateMonthIndex) < this.monthIndexView;\n            const isNextMonth = (yearViewDiff + dateMonthIndex) > this.monthIndexView;\n            const isToday = dateToString(date) === selectedDateString;\n            const isWeekend = dateDayIndex === 0 || dateDayIndex === 6;\n            const isDisabled = typeof this.#isDateDisabled === 'function'\n                ? this.#isDateDisabled(date)\n                : false;\n            latestWeek.dates.push({\n                date: new Date(date),\n                numericDate: dateToNumber(date),\n                isCurrMonth,\n                isPrevMonth,\n                isNextMonth,\n                isToday,\n                isWeekend,\n                isDisabled,\n            });\n            date.setDate(date.getDate() + 1);\n            dayIndex++;\n            if (dayIndex === 7) {\n                weeksView.push({\n                    dates: [],\n                });\n                dayIndex = 0;\n            }\n        }\n        return weeksView;\n    }\n    /**\n     * @param {string} name\n     */\n    #id(name) {\n        return `${name}-${this.#idSufix}`;\n    }\n    get #locale() {\n        const locales = this.lang || 'en';\n        return locales;\n    }\n    #viewPrevMonth() {\n        const monthIndex = this.#monthSelect.selectedIndex;\n        const year = parseInt(this.#yearInput.value, 10);\n        const prevMonthIndex = monthIndex - 1;\n        if (prevMonthIndex < 0) {\n            this.#monthSelect.selectedIndex = 11;\n            this.#yearInput.value = (year - 1).toString();\n            this.#setYearMonthView(year - 1, 11);\n        }\n        else {\n            this.#monthSelect.selectedIndex = prevMonthIndex;\n            this.#setYearMonthView(year, prevMonthIndex);\n        }\n    }\n    #viewNextMonth() {\n        const monthIndex = this.#monthSelect.selectedIndex;\n        const year = parseInt(this.#yearInput.value, 10);\n        const nextMonthIndex = monthIndex + 1;\n        if (nextMonthIndex > 11) {\n            this.#monthSelect.selectedIndex = 0;\n            this.#yearInput.value = (year + 1).toString();\n            this.#setYearMonthView(year + 1, 0);\n        }\n        else {\n            this.#monthSelect.selectedIndex = nextMonthIndex;\n            this.#setYearMonthView(year, nextMonthIndex);\n        }\n    }\n    /**\n     * @param {Date} date\n     */\n    async #handleDateSelect(date) {\n        if (this.#selectionMode === DatePickerControlElement.SELECTION_MODE_SINGLE) {\n            if (this.#selectedBeginDate instanceof Date) {\n                if (this.#selectedBeginDate.getTime() === date.getTime()) {\n                    this.setSelectedBeginDate(null);\n                }\n                else {\n                    this.setSelectedBeginDate(date);\n                }\n            }\n            else {\n                this.setSelectedBeginDate(date);\n            }\n        }\n        else if (this.#selectionMode === DatePickerControlElement.SELECTION_MODE_RANGE) {\n            if (this.#selectedBeginDate instanceof Date) {\n                if (date.getTime() < this.#selectedBeginDate.getTime()) {\n                    this.setSelectedBeginDate(date);\n                }\n                else {\n                    if (this.#selectedBeginDate.getTime() === date.getTime()) {\n                        this.setSelectedBeginDate(null);\n                    }\n                    else {\n                        /**\n                         * What happens when begin date and end date has been set?\n                         */\n                        if (this.#selectedEndDate instanceof Date) {\n                            /**\n                             * USE CASE 1: Reset\n                             */\n                            this.setSelectedBeginDate(date);\n                            /**\n                             * USE CASE 2: Set end date\n                             */\n                            // if (date.getTime() === this.#selectedEndDate.getTime()) {\n                            //   this.setSelectedEndDate(null);\n                            // }\n                            // else {\n                            //   this.setSelectedEndDate(date);\n                            // }\n                        }\n                        else {\n                            this.setSelectedEndDate(date);\n                        }\n                    }\n                }\n            }\n            else {\n                this.setSelectedBeginDate(date);\n            }\n        }\n        else {\n            throw new Error('Invalid selection mode: ' + this.#selectionMode);\n        }\n        const controlCtx = await this.requireContext(DatePickerControlElement);\n        controlCtx.dispatchEvent(new SelectedDateChangeEvent({\n            beginDate: this.#selectedBeginDate,\n            endDate: this.#selectedEndDate,\n        }));\n    }\n    /**\n     * @param {Event} event\n     */\n    #handleSelectionModeSet = (event) => {\n        if (event instanceof SelectionModeSetEvent) {\n            this.#selectionMode = event.detail.selectionMode;\n            this.setSelectedEndDate(null);\n        }\n    };\n    /**\n     * @param {Event} event\n     */\n    #handleSelectedDateSet = (event) => {\n        if (event instanceof SelectedDateSetEvent) {\n            this.#selectedBeginDate = event.detail.beginDate;\n            this.#selectedEndDate = event.detail.endDate;\n            this.#patchRangeSelection();\n        }\n    };\n    #render() {\n        this.#shadowRoot.appendChild(el('section', () => [\n            el('header', () => [\n                this.#yearMonthControlsSlot = el('slot', () => [\n                    at('name', 'year-month-controls'),\n                    el('label', () => [\n                        at('class', 'sr-only'),\n                        at('for', this.#id('month-select')),\n                        tx('Month'),\n                    ]),\n                    this.#monthSelect = el('select', () => [\n                        at('id', this.#id('month-select')),\n                        at('name', 'month'),\n                        at('aria-label', 'Month'),\n                        on('change', (event) => {\n                            event.preventDefault();\n                            const monthIndex = this.#monthSelect.selectedIndex;\n                            const year = parseInt(this.#yearInput.value, 10);\n                            this.#setYearMonthView(year, monthIndex);\n                        }),\n                        ...this.monthNames.map((monthName, index) => {\n                            return el('option', () => [\n                                at('value', monthName),\n                                ...(index === this.monthIndexView ? [at('selected', 'selected')] : []),\n                                tx(monthName),\n                            ]);\n                        }),\n                    ]),\n                    el('label', () => [\n                        at('class', 'sr-only'),\n                        at('for', this.#id('year-input')),\n                        tx('Year'),\n                    ]),\n                    this.#yearInput = el('input', () => [\n                        at('id', this.#id('year-input')),\n                        at('type', 'number'),\n                        at('name', 'year'),\n                        at('aria-label', 'Year'),\n                        at('value', this.yearView.toString()),\n                        at('min', this.#minYear.toString()), // Minimum save year for javascript Date object as of 2024-01-30\n                        at('max', this.#maxYear.toString()), // Maximum save year for javascript Date object as of 2024-01-30\n                        on('change', (event) => {\n                            const monthIndex = this.#monthSelect.selectedIndex;\n                            const year = parseInt(this.#yearInput.value, 10);\n                            if (year < this.#minYear) {\n                                event.preventDefault();\n                                this.#yearInput.setCustomValidity(`Year must be greater than or equal to ${this.#minYear}`);\n                                this.#yearInput.reportValidity();\n                            }\n                            else if (year > this.#maxYear) {\n                                event.preventDefault();\n                                this.#yearInput.setCustomValidity(`Year must be less than or equal to ${this.#maxYear}`);\n                                this.#yearInput.reportValidity();\n                            }\n                            this.#setYearMonthView(year, monthIndex);\n                        }),\n                    ]),\n                ]),\n                el('div', () => [\n                    at('class', 'year-month-pagination'),\n                    el('button', () => [\n                        at('type', 'button'),\n                        on('click', (event) => {\n                            event.preventDefault();\n                            this.#viewPrevMonth();\n                        }),\n                        el('slot', () => [\n                            at('name', 'prev-icon'),\n                            (slot) => slot.innerHTML = `\n                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 -960 960 960\" height=\"24\" width=\"24\" title=\"Previous\"><path fill=\"currentColor\" d=\"m432-480 156 156q11 11 11 28t-11 28q-11 11-28 11t-28-11L348-452q-6-6-8.5-13t-2.5-15q0-8 2.5-15t8.5-13l184-184q11-11 28-11t28 11q11 11 11 28t-11 28L432-480Z\"/></svg>\n              `,\n                        ]),\n                    ]),\n                    el('button', () => [\n                        at('type', 'button'),\n                        on('click', (event) => {\n                            event.preventDefault();\n                            this.#viewNextMonth();\n                        }),\n                        el('slot', () => [\n                            at('name', 'next-icon'),\n                            (slot) => slot.innerHTML = `\n                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 -960 960 960\" height=\"24\" width=\"24\" title=\"Next\"><path fill=\"currentColor\" d=\"M504-480 348-636q-11-11-11-28t11-28q11-11 28-11t28 11l184 184q6 6 8.5 13t2.5 15q0 8-2.5 15t-8.5 13L404-268q-11 11-28 11t-28-11q-11-11-11-28t11-28l156-156Z\"/></svg>\n              `,\n                        ]),\n                    ]),\n                ]),\n            ]),\n            el('table', () => [\n                el('thead', () => [\n                    el('tr', () => [\n                        ...this.dayShortNames.map((dayShortName) => {\n                            return el('th', () => [\n                                el('span', () => [\n                                    tx(dayShortName),\n                                ]),\n                            ]);\n                        }),\n                    ]),\n                ]),\n                this.#calendarTbody = el('tbody', () => []),\n            ]),\n        ]));\n    }\n    #renderCalendar() {\n        return el('tbody', () => [\n            ...this.#datesByWeekView.map((week) => {\n                return el('tr', () => [\n                    ...week.dates.map((date) => {\n                        return el('td', () => [\n                            el('label', () => [\n                                at('class', [\n                                    ...(date.isWeekend ? ['weekend'] : []),\n                                    ...(date.isCurrMonth ? [] : ['other-month']),\n                                ].join(' ')),\n                                el('input', () => [\n                                    at('type', 'checkbox'),\n                                    at('name', 'date'),\n                                    at('value', date.date.toISOString()),\n                                    ...(date.isDisabled ? [at('disabled', 'disabled')] : []),\n                                    ...(date.isToday ? [at('checked', 'checked')] : []),\n                                    on('change', (event) => {\n                                        try {\n                                            this.#handleDateSelect(date.date);\n                                            if (date.isPrevMonth) {\n                                                this.#viewPrevMonth();\n                                            }\n                                            else if (date.isNextMonth) {\n                                                this.#viewNextMonth();\n                                            }\n                                        }\n                                        catch (error) {\n                                            event.preventDefault();\n                                            throw error;\n                                        }\n                                    }),\n                                ]),\n                                el('span', () => [\n                                    el('span', () => [\n                                        tx(date.date.getDate().toString().padStart(2, '0')),\n                                    ]),\n                                ]),\n                            ]),\n                        ]);\n                    }),\n                ]);\n            }),\n        ]);\n    }\n    #patchRangeSelection() {\n        if (!(this.#calendarTbody instanceof HTMLTableSectionElement)) {\n            return;\n        }\n        const beginDate = this.#selectedBeginDate;\n        const endDate = this.#selectedEndDate;\n        const beginNumericDate = dateToNumber(beginDate);\n        const endNumericDate = dateToNumber(endDate);\n        const isSingleSelect = this.#selectionMode === DatePickerControlElement.SELECTION_MODE_SINGLE;\n        const treeWalker = document.createTreeWalker(this.#calendarTbody, NodeFilter.SHOW_ELEMENT, {\n            acceptNode(node) {\n                return (node instanceof HTMLInputElement && node.name === 'date')\n                    ? NodeFilter.FILTER_ACCEPT\n                    : NodeFilter.FILTER_SKIP;\n            },\n        });\n        let input = treeWalker.currentNode;\n        while (input instanceof Node) {\n            input = treeWalker.nextNode();\n            if (!(input instanceof HTMLInputElement)) {\n                continue;\n            }\n            const label = input.labels.item(0);\n            if (!(label instanceof HTMLLabelElement)) {\n                continue;\n            }\n            // Reset label state\n            label.classList.remove('range-selected');\n            label.classList.remove('range-selected-first');\n            label.classList.remove('range-selected-last');\n            const date = new Date(input.value);\n            const numericDate = dateToNumber(date);\n            const isFirst = numericDate === beginNumericDate;\n            const isLast = numericDate === endNumericDate;\n            if (isFirst || isLast) {\n                input.checked = true;\n                input.setAttribute('checked', 'checked');\n            }\n            else {\n                input.checked = false;\n                input.removeAttribute('checked');\n            }\n            if (isSingleSelect) {\n                continue;\n            }\n            const isInRange = true\n                && (numericDate >= beginNumericDate)\n                && (numericDate <= endNumericDate);\n            if (isInRange) {\n                label.classList.add('range-selected');\n            }\n            if (isFirst) {\n                label.classList.add('range-selected-first');\n            }\n            else if (isLast) {\n                label.classList.add('range-selected-last');\n            }\n        }\n    }\n}\n_a = DatePickerViewElement;\n//# sourceMappingURL=date-picker-view.js.map","// @ts-check\nimport { DatePickerViewElement } from '../elements/date-picker-view.js';\ncustomElements.define('f-date-picker-view', DatePickerViewElement);\n//# sourceMappingURL=f-date-picker-view.js.map","// @ts-check\nimport '../components/f-date-picker-view.js';\nimport { PickedDateSetEvent } from '../events/picked-date-set-event.js';\nimport { SelectionModeSetEvent } from '../events/selection-mode-set-event.js';\nimport { at, el } from '../tools/dom.js';\nimport { DatePickerControlElement } from './date-picker-control.js';\nexport class DatePickerInlineElement extends DatePickerControlElement {\n    static #STYLES = (function () {\n        const style = new CSSStyleSheet();\n        style.replace(`\n    `);\n        return [style];\n    })();\n    static get formAssociated() {\n        return true;\n    }\n    static get observedAttributes() {\n        return [\n            'value',\n            'time-unit',\n            'selection-mode',\n        ];\n    }\n    #shadowRoot = this.attachShadow({ mode: 'closed' });\n    connectedCallback() {\n        super.connectedCallback();\n        this.#shadowRoot.adoptedStyleSheets = DatePickerInlineElement.#STYLES;\n        this.#render();\n    }\n    /**\n     * @param {string} name\n     * @param {string} oldValue\n     * @param {any} newValue\n     */\n    async attributeChangedCallback(name, oldValue, newValue) {\n        if (name === 'value') {\n            this.value = newValue;\n            const controlCtx = await this.requireContext(DatePickerControlElement);\n            controlCtx.dispatchEvent(new PickedDateSetEvent({\n                beginDate: this.beginDateValue,\n                endDate: this.endDateValue,\n            }));\n        }\n        else if (name === 'time-unit') {\n            this.timeUnit = newValue;\n        }\n        else if (name === 'selection-mode') {\n            this.selectionMode = newValue;\n            const controlCtx = await this.requireContext(DatePickerControlElement);\n            controlCtx.dispatchEvent(new SelectionModeSetEvent(this.selectionMode));\n        }\n    }\n    #render() {\n        this.#shadowRoot.appendChild(el('slot', () => [\n            at('name', 'date-picker-view'),\n            el('f-date-picker-view', () => []),\n        ]));\n    }\n}\n//# sourceMappingURL=date-picker-inline.js.map","// @ts-check\nimport { DatePickerInlineElement } from '../elements/date-picker-inline.js';\ncustomElements.define('f-date-picker-inline', DatePickerInlineElement);\n//# sourceMappingURL=f-date-picker-inline.js.map","// @ts-check\nimport { YearMonthViewChangeEvent } from '../events/year-month-view-change-event.js';\nimport { tx } from '../tools/dom.js';\nimport { ContextAwareElement } from './context-aware.js';\nimport { DatePickerViewElement } from './date-picker-view.js';\nexport class DatePickerMonthViewElement extends ContextAwareElement {\n    #shadowRoot = this.attachShadow({ mode: 'closed' });\n    /** @type {Text} */\n    #text;\n    async connectedCallback() {\n        this.#render();\n        const viewCtx = await this.requireContext(DatePickerViewElement);\n        viewCtx.addEventListener(YearMonthViewChangeEvent.EVENT_TYPE, this.#handleMonthViewChange);\n        this.#text.nodeValue = viewCtx.monthNames[viewCtx.monthIndexView];\n    }\n    async disconnectedCallback() {\n        const viewCtx = await this.requireContext(DatePickerViewElement);\n        viewCtx.removeEventListener(YearMonthViewChangeEvent.EVENT_TYPE, this.#handleMonthViewChange);\n    }\n    /**\n     * @param {Event} event\n     */\n    #handleMonthViewChange = (event) => {\n        if (event instanceof YearMonthViewChangeEvent) {\n            this.#text.nodeValue = event.detail.monthLabel.toString();\n        }\n    };\n    #render() {\n        this.#shadowRoot.appendChild(this.#text = tx(''));\n    }\n}\n//# sourceMappingURL=date-picker-month-view.js.map","// @ts-check\nimport { DatePickerMonthViewElement } from '../elements/date-picker-month-view.js';\ncustomElements.define('f-date-picker-month-view', DatePickerMonthViewElement);\n//# sourceMappingURL=f-date-picker-month-view.js.map","// @ts-check\nimport { YearMonthViewChangeEvent } from '../events/year-month-view-change-event.js';\nimport { tx } from '../tools/dom.js';\nimport { ContextAwareElement } from './context-aware.js';\nimport { DatePickerViewElement } from './date-picker-view.js';\nexport class DatePickerYearViewElement extends ContextAwareElement {\n    static get requiredContexts() {\n        return [\n            DatePickerViewElement,\n        ];\n    }\n    #shadowRoot = this.attachShadow({ mode: 'closed' });\n    /** @type {Text} */\n    #text;\n    async connectedCallback() {\n        this.#render();\n        const viewCtx = await this.requireContext(DatePickerViewElement);\n        viewCtx.addEventListener(YearMonthViewChangeEvent.EVENT_TYPE, this.#handleChange);\n    }\n    async disconnectedCallback() {\n        const viewCtx = await this.requireContext(DatePickerViewElement);\n        viewCtx.removeEventListener(YearMonthViewChangeEvent.EVENT_TYPE, this.#handleChange);\n        this.#text.nodeValue = viewCtx.yearView?.toString();\n    }\n    /**\n     * @param {CustomEvent} event\n     */\n    #handleChange = (event) => {\n        if (event instanceof YearMonthViewChangeEvent) {\n            this.#text.nodeValue = event.detail.year.toString();\n        }\n    };\n    #render() {\n        this.#shadowRoot.appendChild(this.#text = tx(''));\n    }\n}\n//# sourceMappingURL=date-picker-year-view.js.map","// @ts-check\nimport { DatePickerYearViewElement } from '../elements/date-picker-year-view.js';\ncustomElements.define('f-date-picker-year-view', DatePickerYearViewElement);\n//# sourceMappingURL=f-date-picker-year-view.js.map","// @ts-check\nimport { DateRelatedEvent } from './date-related-event.js';\n/** @typedef {import('../tools/date.js').DateRange} DateRange */\n/** @typedef {import('./date-related-event.js').DateRelatedEventDetail} DateRelatedEventDetail */\nexport class PickedDateChangeEvent extends DateRelatedEvent {\n    static get EVENT_TYPE() {\n        return 'change';\n    }\n    /**\n     * @param {DateRange} dateRange\n     * @param {CustomEventInit<DateRelatedEventDetail>} [options]\n     */\n    constructor(dateRange, options) {\n        super(PickedDateChangeEvent.EVENT_TYPE, dateRange, options);\n    }\n}\n//# sourceMappingURL=picked-date-change-event.js.map","// @ts-check\nimport '../components/f-date-picker-view.js';\nimport { PickedDateChangeEvent } from '../events/picked-date-change-event.js';\nimport { PickedDateSetEvent } from '../events/picked-date-set-event.js';\nimport { SelectedDateChangeEvent } from '../events/selected-date-change-event.js';\nimport { SelectedDateSetEvent } from '../events/selected-date-set-event.js';\nimport { dateRangeToString, dateToString } from '../tools/date.js';\nimport { at, el, on, tx } from '../tools/dom.js';\nimport { DatePickerControlElement } from './date-picker-control.js';\nexport class DatePickerDialogElement extends DatePickerControlElement {\n    static #STYLES = (function () {\n        const style = new CSSStyleSheet();\n        style.replace(`\n:host {\n  --si-input-button-height: 36px;\n  --si-submit-button-height: 36px;\n  --si-dialog-radius: 4px;\n  --si-dialog-padding: 16px;\n}\nbutton {\n  display: block;\n  padding: 0 8px;\n  height: var(--si-input-button-height);\n}\ndialog {\n  border: none;\n  padding: var(--si-dialog-padding);\n  border-radius: var(--si-dialog-radius);\n}\ndialog > form > slot > div {\n  display: flex;\n  justify-content: flex-end;\n  gap: 8px;\n  margin-top: 8px;\n}\ndialog > form > slot > div > button {\n  display: block;\n  padding: 0 8px;\n  height: var(--si-submit-button-height);\n}\n    `);\n        return [style];\n    })();\n    static get formAssociated() {\n        return true;\n    }\n    static get observedAttributes() {\n        return [\n            'open',\n            'value',\n        ];\n    }\n    #shadowRoot = this.attachShadow({ mode: 'closed' });\n    /** @type {Text} */\n    #buttonText;\n    /** @type {HTMLDialogElement} */\n    #dialog;\n    /** @type {HTMLFormElement} */\n    #form;\n    /** @type {Date} */\n    #selectedBeginDate;\n    /** @type {Date} */\n    #selectedEndDate;\n    async connectedCallback() {\n        const controlCtx = await this.requireContext(DatePickerControlElement);\n        controlCtx.addEventListener(PickedDateChangeEvent.EVENT_TYPE, this.#handlePickedDateChange);\n        controlCtx.addEventListener(PickedDateSetEvent.EVENT_TYPE, this.#handlePickedDateSet);\n        controlCtx.addEventListener(SelectedDateChangeEvent.EVENT_TYPE, this.#handleSelectedDateChange);\n        super.connectedCallback();\n        this.#shadowRoot.adoptedStyleSheets = DatePickerDialogElement.#STYLES;\n        this.#render();\n        this.#dialog.addEventListener('open', this.#handleDialogOpen);\n        this.#dialog.addEventListener('close', this.#handleDialogClose);\n        if (this.hasAttribute('open')) {\n            this.#openDatePicker();\n        }\n        else {\n            this.#closeDatePicker();\n        }\n        this.#updateButtonText();\n    }\n    async disconnectedCallback() {\n        this.#dialog.removeEventListener('open', this.#handleDialogOpen);\n        this.#dialog.removeEventListener('close', this.#handleDialogClose);\n        const controlCtx = await this.requireContext(DatePickerControlElement);\n        controlCtx.removeEventListener(PickedDateChangeEvent.EVENT_TYPE, this.#handlePickedDateChange);\n        controlCtx.removeEventListener(PickedDateSetEvent.EVENT_TYPE, this.#handlePickedDateSet);\n        controlCtx.removeEventListener(SelectedDateChangeEvent.EVENT_TYPE, this.#handleSelectedDateChange);\n    }\n    /**\n     * @param {string} name\n     * @param {string} oldValue\n     * @param {string} newValue\n     */\n    attributeChangedCallback(name, oldValue, newValue) {\n        if (name === 'open') {\n            if (newValue === null) {\n                this.#closeDatePicker();\n            }\n            else {\n                this.#openDatePicker();\n            }\n        }\n        else if (name === 'value') {\n            if (newValue === null) {\n                this.value = null;\n            }\n            else {\n                this.value = newValue;\n            }\n            this.#updateButtonText();\n        }\n    }\n    requestSubmit = () => {\n        this.#form.requestSubmit();\n    };\n    openDatePicker() {\n        this.#openDatePicker();\n    }\n    closeDatePicker() {\n        this.#closeDatePicker();\n    }\n    #updateButtonText() {\n        if (this.beginDateValue instanceof Date) {\n            if (this.#buttonText instanceof Text) {\n                this.#buttonText.nodeValue = `Selected Date: ${this.value}`;\n            }\n        }\n        else {\n            if (this.#buttonText instanceof Text) {\n                this.#buttonText.nodeValue = 'Select Date';\n            }\n        }\n    }\n    #openDatePicker = async () => {\n        if (this.#dialog instanceof HTMLDialogElement) {\n            const controlCtx = await this.requireContext(DatePickerControlElement);\n            controlCtx.dispatchEvent(new SelectedDateSetEvent({\n                beginDate: this.#selectedBeginDate,\n                endDate: this.#selectedEndDate,\n            }));\n            this.#dialog.showModal();\n            if (!this.hasAttribute('open')) {\n                this.setAttribute('open', '');\n            }\n        }\n    };\n    #closeDatePicker = () => {\n        if (this.#dialog instanceof HTMLDialogElement) {\n            this.#dialog.close();\n        }\n    };\n    #handleDialogOpen = async () => {\n        if (!this.hasAttribute('open')) {\n            this.setAttribute('open', '');\n        }\n    };\n    #handleDialogClose = () => {\n        if (this.hasAttribute('open')) {\n            this.removeAttribute('open');\n        }\n    };\n    /**\n     * @param {Event} event\n     */\n    #handleSelectedDateChange = (event) => {\n        if (event instanceof SelectedDateChangeEvent) {\n            const { beginDate, endDate } = event.detail;\n            this.#selectedBeginDate = beginDate;\n            this.#selectedEndDate = endDate;\n        }\n    };\n    /**\n     * @param {Event} event\n     */\n    #handlePickedDateChange = (event) => {\n        if (event instanceof PickedDateChangeEvent) {\n            this.#updateButtonText();\n        }\n    };\n    /**\n     * @param {Event} event\n     */\n    #handlePickedDateSet = (event) => {\n        if (event instanceof PickedDateSetEvent) {\n            const { beginDate, endDate } = event.detail;\n            this.#selectedBeginDate = beginDate;\n            this.#selectedEndDate = endDate;\n            this.#updateButtonText();\n        }\n    };\n    #handleFormSubmit = () => {\n        if (this.selectionMode === DatePickerControlElement.SELECTION_MODE_SINGLE) {\n            this.value = dateToString(this.#selectedBeginDate);\n        }\n        else if (this.selectionMode === DatePickerControlElement.SELECTION_MODE_RANGE) {\n            this.value = dateRangeToString({\n                beginDate: this.#selectedBeginDate,\n                endDate: this.#selectedEndDate,\n            });\n        }\n        else {\n            throw new Error('Invalid selection mode');\n        }\n        this.#updateButtonText();\n    };\n    #render() {\n        this.#shadowRoot.appendChild(el('div', () => [\n            el('slot', () => [\n                at('name', 'date-picker-controls'),\n                el('button', () => [\n                    on('click', this.#openDatePicker),\n                    this.#buttonText = tx('Select Date'),\n                ]),\n            ]),\n            this.#dialog = el('dialog', () => [\n                this.#form = el('form', () => [\n                    at('method', 'dialog'),\n                    on('submit', this.#handleFormSubmit),\n                    el('slot', () => [\n                        at('name', 'date-picker-view'),\n                        el('f-date-picker-view', () => []),\n                    ]),\n                    el('slot', () => [\n                        at('name', 'form-controls'),\n                        el('div', () => [\n                            el('button', () => [\n                                at('type', 'button'),\n                                on('click', this.#closeDatePicker),\n                                tx('Cancel'),\n                            ]),\n                            el('button', () => [\n                                at('type', 'submit'),\n                                tx('Apply'),\n                            ]),\n                        ]),\n                    ]),\n                ]),\n            ]),\n        ]));\n    }\n}\n//# sourceMappingURL=date-picker-dialog.js.map","// @ts-check\nimport { DatePickerDialogElement } from '../elements/date-picker-dialog.js';\ncustomElements.define('f-date-picker-dialog', DatePickerDialogElement);\n//# sourceMappingURL=f-date-picker-dialog.js.map"],"names":["CalendarViewChangeEvent","CustomEvent","EVENT_TYPE","constructor","options","super","DateRelatedEvent","beginDate","endDate","type","dateRange","detail","this","SelectedDateChangeEvent","SelectedDateSetEvent","SelectionModeSetEvent","selectionMode","YearMonthViewChangeEvent","year","monthIndex","monthLabel","dateToString","date","isInvalidDate","getFullYear","month","getMonth","day","getDate","toString","padStart","anyDate","Date","isNaN","getTime","dateToNumber","dateString","parseInt","replace","dateStringToDate","yearStr","monthStr","rawDateStr","split","dateStr","el","tagNameOrElement","propFn","element","document","createElement","props","prop","Attr","setAttributeNode","Node","appendChild","text","createTextNode","at","localName","value","attr","createAttribute","tx","data","on","listener","bypassTypingListener","addEventListener","ContextAwareElement","HTMLElement","requireContext","checkingInterval","Promise","resolve","setTimeout","context","traceContext","retryThreshold","numOfRetries","interval","setInterval","clearInterval","Error","name","ShadowRoot","host","parentNode","PickedDateSetEvent","DatePickerControlElement","formAssociated","static","TIME_UNIT_DAY","SELECTION_MODE_SINGLE","SELECTION_MODE_RANGE","internals","attachInternals","timeUnit","connectedCallback","hasAttribute","getAttribute","AVAILABLE_TIME_UNITS","includes","console","warn","AVAILABLE_SELECTION_MODES","dateFormatter","setFormValue","removeAttribute","dispatchEvent","dateParserFn","beginDateStr","endDateStr","Infinity","isInvalidBeginDate","isInvalidEndDate","beginDateValue","endDateValue","form","attributes","getNamedItem","nodeValue","validity","validationMessage","willValidate","checkValidity","reportValidity","_a","DatePickerViewElement","style","CSSStyleSheet","observedAttributes","shadowRoot","attachShadow","mode","idSufix","ID_INC","calendarTbody","yearInput","monthSelect","yearMonthControlsSlot","minYear","maxYear","yearView","monthIndexView","selectedBeginDate","selectedEndDate","isDateDisabled","adoptedStyleSheets","STYLES","render","controlCtx","viewCtx","handleSelectedDateSet","handleSelectionModeSet","handleCalendarViewChange","defaultDate","setYearMonthView","disconnectedCallback","removeEventListener","monthNames","formatter","Intl","DateTimeFormat","locale","Array","keys","map","format","dayShortNames","weekday","dayIndexes","firstDayOfWeekDate","setDate","getDay","dayIndex","setSelectedBeginDate","patchRangeSelection","setSelectedEndDate","setDisabledFilter","filterFn","selectedIndex","event","newCalendar","renderCalendar","replaceWith","datesByWeekView","beginOfMonthDate","beginOfWeekOfMonthDate","endOfMonthDate","endOfWeekOfMonthDate","weeksView","dates","isCurrMonth","isPrevMonth","isNextMonth","isToday","isWeekend","isDisabled","slice","selectedDateString","length","latestWeek","dateDayIndex","dateMonthIndex","yearViewDiff","push","numericDate","id","lang","viewPrevMonth","prevMonthIndex","viewNextMonth","nextMonthIndex","handleDateSelect","preventDefault","monthName","index","setCustomValidity","slot","innerHTML","dayShortName","week","join","toISOString","error","HTMLTableSectionElement","beginNumericDate","endNumericDate","isSingleSelect","treeWalker","createTreeWalker","NodeFilter","SHOW_ELEMENT","acceptNode","node","HTMLInputElement","FILTER_ACCEPT","FILTER_SKIP","input","currentNode","nextNode","label","labels","item","HTMLLabelElement","classList","remove","isFirst","isLast","checked","setAttribute","add","customElements","define","DatePickerInlineElement","attributeChangedCallback","oldValue","newValue","DatePickerMonthViewElement","handleMonthViewChange","DatePickerYearViewElement","requiredContexts","handleChange","PickedDateChangeEvent","DatePickerDialogElement","buttonText","dialog","handlePickedDateChange","handlePickedDateSet","handleSelectedDateChange","handleDialogOpen","handleDialogClose","openDatePicker","closeDatePicker","updateButtonText","requestSubmit","Text","async","HTMLDialogElement","showModal","close","handleFormSubmit","dateRangeToString"],"mappings":"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"}