{
  "version": 3,
  "sources": ["../src/events/calendar-view-change-event.js", "../src/events/date-related-event.js", "../src/events/selected-date-change-event.js", "../src/events/selected-date-set-event.js", "../src/events/selection-mode-set-event.js", "../src/events/year-month-view-change-event.js", "../src/tools/date.js", "../src/tools/dom.js", "../src/elements/context-aware.js", "../src/events/picked-date-set-event.js", "../src/elements/date-picker-control.js", "../src/elements/date-picker-view.js", "../src/components/f-date-picker-view.js", "../src/elements/date-picker-inline.js", "../src/components/f-date-picker-inline.js", "../src/elements/date-picker-month-view.js", "../src/components/f-date-picker-month-view.js", "../src/elements/date-picker-year-view.js", "../src/components/f-date-picker-year-view.js", "../src/events/picked-date-change-event.js", "../src/elements/date-picker-dialog.js", "../src/components/f-date-picker-dialog.js"],
  "sourcesContent": ["// @ts-check\n\n/**\n * @typedef {object} CalendarViewChangeEventDetail\n */\n\n/**\n * @extends {CustomEvent<CalendarViewChangeEventDetail>}\n */\nexport class CalendarViewChangeEvent extends CustomEvent {\n  static get EVENT_TYPE() {\n    return 'calendar-view-change';\n  }\n\n  /**\n   * @param {CustomEventInit<CalendarViewChangeEventDetail>} [options]\n   */\n  constructor(options) {\n    super(CalendarViewChangeEvent.EVENT_TYPE, options);\n  }\n}\n", "// @ts-check\n\n/** @typedef {import('../tools/date.js').DateRange} DateRange */\n\n/** @typedef {DateRange} DateRelatedEventDetail */\n\n/**\n * @extends {CustomEvent<DateRelatedEventDetail>}\n */\nexport class DateRelatedEvent extends CustomEvent {\n  /** @type {Date} */\n  #beginDate;\n\n  /** @type {Date} */\n  #endDate;\n\n  /**\n   * @param {string} type\n   * @param {DateRange} dateRange\n   * @param {CustomEventInit<DateRelatedEventDetail>} [options]\n   */\n  constructor(type, dateRange, options) {\n    super(type, {\n      ...options,\n      detail: {\n        ...options?.detail,\n        ...dateRange,\n      },\n    });\n\n    this.#beginDate = dateRange.beginDate;\n    this.#endDate = dateRange.endDate;\n  }\n\n  get beginDate() {\n    return this.#beginDate;\n  }\n\n  get endDate() {\n    return this.#endDate;\n  }\n}\n", "// @ts-check\n\nimport { DateRelatedEvent } from './date-related-event.js';\n\n/** @typedef {import('../tools/date.js').DateRange} DateRange */\n/** @typedef {import('./date-related-event.js').DateRelatedEventDetail} DateRelatedEventDetail */\n\nexport class SelectedDateChangeEvent extends DateRelatedEvent {\n  static get EVENT_TYPE() {\n    return 'selected-date-change';\n  }\n\n  /**\n   * @param {DateRange} dateRange\n   * @param {CustomEventInit<DateRelatedEventDetail>} [options]\n   */\n  constructor(dateRange, options) {\n    super(SelectedDateChangeEvent.EVENT_TYPE, dateRange, options);\n  }\n}\n", "// @ts-check\n\nimport { DateRelatedEvent } from './date-related-event.js';\n\n/** @typedef {import('../tools/date.js').DateRange} DateRange */\n/** @typedef {import('./date-related-event.js').DateRelatedEventDetail} DateRelatedEventDetail */\n\nexport class SelectedDateSetEvent extends DateRelatedEvent {\n  static get EVENT_TYPE() {\n    return 'selected-date-set';\n  }\n\n  /**\n   * @param {DateRange} dateRange\n   * @param {CustomEventInit<DateRelatedEventDetail>} [options]\n   */\n  constructor(dateRange, options) {\n    super(SelectedDateSetEvent.EVENT_TYPE, dateRange, options);\n  }\n}\n", "// @ts-check\n\n/** @typedef {import('../tools/date.js').DateRange} DateRange */\n/** @typedef {import('./date-related-event.js').DateRelatedEventDetail} DateRelatedEventDetail */\n/** @typedef {'single'|'range'} SelectionMode */\n\n/**\n * @typedef {object} SelectionModeSetEventDetail\n * @property {SelectionMode} selectionMode\n */\n\n/**\n * @extends {CustomEvent<SelectionModeSetEventDetail>}\n */\nexport class SelectionModeSetEvent extends CustomEvent {\n  static get EVENT_TYPE() {\n    return 'selection-mode-set';\n  }\n\n  /** @type {SelectionMode} */\n  #selectionMode;\n\n  /**\n   * @param {SelectionMode} selectionMode\n   * @param {CustomEventInit<SelectionModeSetEventDetail>} [options]\n   */\n  constructor(selectionMode, options) {\n    super(SelectionModeSetEvent.EVENT_TYPE, {\n      ...options,\n      detail: {\n        ...options?.detail,\n        selectionMode,\n      },\n    });\n\n    this.#selectionMode = selectionMode;\n  }\n\n  get selectionMode() {\n    return this.#selectionMode;\n  }\n}\n", "// @ts-check\n\n/**\n * @typedef {object} YearMonthViewChangeEventDetail\n * @property {number} year\n * @property {number} monthIndex\n * @property {string} monthLabel\n */\n\n/**\n * @extends {CustomEvent<YearMonthViewChangeEventDetail>}\n */\nexport class YearMonthViewChangeEvent extends CustomEvent {\n  static get EVENT_TYPE() {\n    return 'year-month-view-change';\n  }\n\n  /** @type {number} */\n  #year;\n\n  /** @type {number} */\n  #monthIndex;\n\n  /**\n   * @param {number} year\n   * @param {number} monthIndex\n   * @param {string} monthLabel\n   * @param {CustomEventInit<YearMonthViewChangeEventDetail>} [options]\n   */\n  constructor(year, monthIndex, monthLabel, options) {\n    super(YearMonthViewChangeEvent.EVENT_TYPE, {\n      ...options,\n      detail: {\n        ...options?.detail,\n        year,\n        monthIndex,\n        monthLabel,\n      },\n    });\n\n    this.#year = year;\n    this.#monthIndex = monthIndex;\n  }\n\n  get year() {\n    return this.#year;\n  }\n\n  get monthIndex() {\n    return this.#monthIndex;\n  }\n}\n", "// @ts-check\n\n/** @typedef {Date|number|string} AnyDate */\n\n/**\n * @typedef {object} DateRange\n * @property {Date} beginDate\n * @property {Date} endDate\n */\n\n/**\n * @param {DateRange} dateRange\n * @returns {string}\n */\nexport function dateRangeToString({ beginDate, endDate }) {\n  if (isInvalidDate(beginDate) || isInvalidDate(endDate)) {\n    return '';\n  }\n\n  const beginDateString = dateToString(beginDate);\n  const endDateString = dateToString(endDate);\n\n  return `${beginDateString}/${endDateString}`;\n}\n\n/**\n * @param {Date} date\n * @returns {string}\n */\nexport function dateToString(date) {\n  if (isInvalidDate(date)) {\n    return '';\n  }\n\n  const fullIsoString = date.toISOString();\n  const dateIsoString = fullIsoString.split('T')[0];\n\n  return dateIsoString;\n}\n\n/**\n * @param {AnyDate} [anyDate]\n * @returns {boolean}\n */\nexport function isInvalidDate(anyDate) {\n  if (!anyDate) {\n    return true;\n  }\n  const date = new Date(anyDate);\n  return date === null || isNaN(date.getTime());\n}\n\n/**\n * @param {string} dateRangeString\n * @returns {DateRange}\n */\nexport function dateRangeStringToDateRange(dateRangeString) {\n  const [beginDateString, endDateString] = dateRangeString.split('/');\n\n  const beginDate = new Date(beginDateString);\n  const endDate = new Date(endDateString);\n\n  return {\n    beginDate: isInvalidDate(beginDate) ? null : beginDate,\n    endDate: isInvalidDate(endDate) ? null : endDate,\n  };\n}\n\n/**\n * @param {Date} date\n * @returns {number}\n */\nexport function dateToNumber(date) {\n  if (isInvalidDate(date)) {\n    return 0;\n  }\n\n  const dateString = dateToString(date);\n\n  return parseInt(dateString.replace(/-/g, ''), 10);\n}\n\n/**\n * @param {string} dateString\n * @returns {Date}\n */\nexport function dateStringToDate(dateString) {\n  \n\n  const [yearStr, monthStr, rawDateStr] = dateString.split('-');\n\n  const dateStr = (rawDateStr || '')\n    .split('T')[0]\n    .split(' ')[0];\n\n  const year = parseInt(yearStr, 10);\n  const month = parseInt(monthStr, 10);\n  const date = parseInt(dateStr, 10);\n\n  return new Date(year, month - 1, date);\n}\n", "// @ts-check\n\n/**\n * @typedef {Node|Attr|string} BasicProp\n */\n\n/**\n * @template {keyof HTMLElementTagNameMap} TagName\n * @typedef {(element: HTMLElementTagNameMap[TagName]) => void} FnProp\n */\n\n/**\n * @template {keyof HTMLElementTagNameMap} TagName\n * @typedef {BasicProp|FnProp<TagName>|void} Prop\n */\n\n// let padding = 0;\n\n/**\n * @template {keyof HTMLElementTagNameMap} TagName\n * @template {HTMLElementTagNameMap[TagName]} Elm\n * @param {TagName|Elm} tagNameOrElement\n * @param {(element: HTMLElementTagNameMap[TagName]|Elm) => Array<Prop<TagName>>} propFn\n * @returns {HTMLElementTagNameMap[TagName]|Elm}\n */\nexport function el(tagNameOrElement, propFn) {\n  // console.log(`${' '.repeat(padding)}<${tagNameOrElement}>`);\n  // padding += 2;\n\n  /** @type {HTMLElementTagNameMap[TagName]|Elm} */\n  const element = (typeof tagNameOrElement === 'string')\n    ? document.createElement(tagNameOrElement)\n    : tagNameOrElement;\n\n  const props = propFn(element);\n\n  for (const prop of props) {\n    if (prop instanceof Attr) {\n      element.setAttributeNode(prop);\n    }\n    else if (prop instanceof Node) {\n      element.appendChild(prop);\n    }\n    else if (typeof prop === 'function') {\n      prop(element);\n    }\n    else if (typeof prop === 'string') {\n      const text = document.createTextNode(prop);\n      element.appendChild(text);\n    }\n  }\n\n  // padding -= 2;\n  // console.log(`${' '.repeat(padding)}</${tagNameOrElement}>`);\n\n  return element;\n}\n\n/**\n   * @param {string} localName\n   * @param {string} value\n   * @returns {Attr}\n   */\nexport function at(localName, value) {\n  const attr = document.createAttribute(localName);\n  attr.value = value;\n  return attr;\n}\n\n/**\n   * @param {string} data\n   * @returns {Text}\n   */\nexport function tx(data) {\n  const text = document.createTextNode(data);\n  return text;\n}\n\n/**\n   * @template {keyof HTMLElementTagNameMap} TagName\n   * @template {keyof HTMLElementEventMap} EventName\n   * @param {EventName} type\n   * @param {(this: HTMLElementTagNameMap[TagName], event: HTMLElementEventMap[EventName]) => void} listener\n   * @param {boolean|AddEventListenerOptions} [options]\n   * @returns {(element: HTMLElementTagNameMap[TagName]) => void}\n   */\nexport function on(type, listener, options) {\n  return function (element) {\n    /** @type {any} */\n    const bypassTypingListener = listener;\n    element.addEventListener(type, bypassTypingListener, options);\n  };\n}\n", "// @ts-check\n\nexport class ContextAwareElement extends HTMLElement {\n  /**\n   * Why is this method async?\n   * this method usually is called in connectedCallback hook of web component\n   * but unfortunately, before connectedCallback is called, the element is not yet attached to the DOM\n   * therefore the parentElement is invalid, and we need to wait for the next tick\n   *\n   * @template {ContextAwareElement} T\n   * @param {new () => T} constructor\n   * @returns {Promise<T>}\n   */\n  async requireContext(constructor) {\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        /** @type {Node} */\n        let element = this;\n\n        while (element instanceof Node) {\n          if (element instanceof constructor) {\n            resolve(element);\n            return;\n          }\n\n          if (element instanceof ShadowRoot) {\n            element = element.host;\n          }\n          else {\n            element = element.parentNode;\n          }\n        }\n\n        console.warn(`Context ${constructor.name} not found`);\n\n        reject(new Error(`Context ${constructor.name} not found`));\n      });\n    });\n  }\n}\n", "// @ts-check\n\nimport { DateRelatedEvent } from './date-related-event.js';\n\n/** @typedef {import('../tools/date.js').DateRange} DateRange */\n/** @typedef {import('./date-related-event.js').DateRelatedEventDetail} DateRelatedEventDetail */\n\nexport class PickedDateSetEvent extends DateRelatedEvent {\n  static get EVENT_TYPE() {\n    return 'picked-date-set';\n  }\n\n  /**\n   * @param {DateRange} dateRange\n   * @param {CustomEventInit<DateRelatedEventDetail>} [options]\n   */\n  constructor(dateRange, options) {\n    super(PickedDateSetEvent.EVENT_TYPE, dateRange, options);\n  }\n}\n", "// @ts-check\n\nimport { PickedDateSetEvent } from '../events/picked-date-set-event.js';\nimport { dateStringToDate, dateToString, isInvalidDate } from '../tools/date.js';\n\nimport { ContextAwareElement } from './context-aware.js';\n\n/** @typedef {import('../events/selection-mode-set-event.js').SelectionMode} SelectionMode */\n\n/**\n * @typedef {'day'} TimeUnit\n */\n\nexport class DatePickerControlElement extends ContextAwareElement {\n  static get formAssociated() {\n    return true;\n  }\n\n  /** @type {TimeUnit} */\n  static TIME_UNIT_DAY = 'day';\n\n  /** @type {SelectionMode} */\n  static SELECTION_MODE_SINGLE = 'single';\n\n  /** @type {SelectionMode} */\n  static SELECTION_MODE_RANGE = 'range';\n\n  static #AVAILABLE_TIME_UNITS = [\n    DatePickerControlElement.TIME_UNIT_DAY,\n  ];\n\n  static #AVAILABLE_SELECTION_MODES = [\n    DatePickerControlElement.SELECTION_MODE_SINGLE,\n    DatePickerControlElement.SELECTION_MODE_RANGE,\n  ];\n\n  #internals = this.attachInternals();\n\n  /** @type {TimeUnit} */\n  #timeUnit = 'day';\n\n  /** @type {SelectionMode} */\n  #selectionMode = 'single';\n\n  /** @type {Date} */\n  #beginDate;\n\n  /** @type {Date} */\n  #endDate;\n\n  connectedCallback() {\n    if (this.hasAttribute('value')) {\n      this.value = this.getAttribute('value');\n    }\n\n    if (this.hasAttribute('time-unit')) {\n      /** @type {any} */\n      const timeUnit = this.getAttribute('time-unit');\n      this.timeUnit = timeUnit;\n    }\n\n    if (this.hasAttribute('selection-mode')) {\n      /** @type {any} */\n      const selectionMode = this.getAttribute('selection-mode');\n      this.selectionMode = selectionMode;\n    }\n  }\n\n  get timeUnit() {\n    return this.#timeUnit;\n  }\n\n  /**\n   * @param {TimeUnit} timeUnit\n   */\n  set timeUnit(timeUnit) {\n    if (!DatePickerControlElement.#AVAILABLE_TIME_UNITS.includes(timeUnit)) {\n      console.warn('Invalid time unit', timeUnit);\n      return;\n    }\n\n    this.#timeUnit = timeUnit;\n  }\n\n  get selectionMode() {\n    return this.#selectionMode;\n  }\n\n  /**\n   * @param {any} selectionMode\n   */\n  set selectionMode(selectionMode) {\n    if (!DatePickerControlElement.#AVAILABLE_SELECTION_MODES.includes(selectionMode)) {\n      console.warn('Invalid selection mode', selectionMode);\n      return;\n    }\n\n    this.#selectionMode = selectionMode;\n  }\n\n  get value() {\n\n    /** @type {(date: Date) => string} */\n    let dateFormatter = null;\n\n    if (this.#timeUnit === DatePickerControlElement.TIME_UNIT_DAY) {\n      dateFormatter = dateToString;\n    }\n    else {\n      throw new Error('Invalid time unit');\n    }\n\n    if (this.#selectionMode === DatePickerControlElement.SELECTION_MODE_RANGE) {\n      return (this.#beginDate instanceof Date && this.#endDate instanceof Date)\n        ? `${dateFormatter(this.#beginDate)}/${dateFormatter(this.#endDate)}`\n        : null;\n    }\n    else if (this.#selectionMode === DatePickerControlElement.SELECTION_MODE_SINGLE) {\n      return this.#beginDate instanceof Date\n        ? dateFormatter(this.#beginDate)\n        : null;\n    }\n    else {\n      throw new Error('Invalid selection mode');\n    }\n  }\n\n  /**\n   * @param {string} value\n   */\n  set value(value) {\n    if (!value) {\n      this.#beginDate = null;\n      this.#endDate = null;\n      this.#internals.setFormValue(null);\n      this.removeAttribute('value');\n      this.dispatchEvent(new PickedDateSetEvent({\n        beginDate: null,\n        endDate: null,\n      }));\n      return;\n    }\n\n    /** @type {(dateStr: string) => Date} */\n    let dateParserFn = null;\n\n    if (this.#timeUnit === DatePickerControlElement.TIME_UNIT_DAY) {\n      dateParserFn = dateStringToDate;\n    }\n    else {\n      throw new Error('Invalid time unit');\n    }\n\n    if (this.#selectionMode === DatePickerControlElement.SELECTION_MODE_RANGE) {\n      if (!value?.includes('/')) {\n        console.warn('Invalid date range format', value);\n        return;\n      }\n\n      const [beginDateStr, endDateStr] = value.split('/');\n\n      const beginDate = dateParserFn(beginDateStr);\n      const endDate = dateParserFn(endDateStr);\n\n      if (isInvalidDate(beginDate)) {\n        this.#beginDate = null;\n        this.#endDate = null;\n        this.#internals.setFormValue(null);\n        this.removeAttribute('value');\n        this.dispatchEvent(new PickedDateSetEvent({\n          beginDate: null,\n          endDate: null,\n        }));\n      }\n      else {\n        this.#beginDate = beginDate;\n\n        if (isInvalidDate(endDate)) {\n          this.#endDate = null;\n          this.#internals.setFormValue(beginDateStr);\n          this.dispatchEvent(new PickedDateSetEvent({\n            beginDate,\n            endDate: null,\n          }));\n        }\n        else {\n          this.#endDate = endDate;\n          this.#internals.setFormValue(`${beginDateStr}/${endDateStr}`);\n          this.dispatchEvent(new PickedDateSetEvent({\n            beginDate,\n            endDate,\n          }));\n        }\n      }\n    }\n    else if (this.#selectionMode === DatePickerControlElement.SELECTION_MODE_SINGLE) {\n      const date = dateParserFn(value);\n\n      if (isInvalidDate(date)) {\n        this.#beginDate = null;\n        this.#internals.setFormValue(null);\n        this.removeAttribute('value');\n        this.dispatchEvent(new PickedDateSetEvent({\n          beginDate: null,\n          endDate: null,\n        }));\n      }\n      else {\n        this.#beginDate = date;\n        this.#internals.setFormValue(dateToString(date));\n        this.dispatchEvent(new PickedDateSetEvent({\n          beginDate: date,\n          endDate: null,\n        }));\n      }\n    }\n    else {\n      throw new Error('Invalid selection mode');\n    }\n\n    const [beginDateStr, endDateStr] = (value ?? '').split('/');\n\n    const beginDate = beginDateStr\n      ? new Date(beginDateStr)\n      : new Date(Infinity);\n\n    const endDate = endDateStr\n      ? new Date(endDateStr)\n      : new Date(Infinity);\n\n    const isInvalidBeginDate = isInvalidDate(beginDate);\n    const isInvalidEndDate = isInvalidDate(endDate);\n\n    if (isInvalidBeginDate) {\n      this.#beginDate = null;\n      this.#endDate = null;\n      this.#internals.setFormValue(null);\n      this.removeAttribute('value');\n      this.dispatchEvent(new PickedDateSetEvent({\n        beginDate: null,\n        endDate: null,\n      }));\n    }\n    else {\n      const beginDateStr = dateToString(beginDate);\n      this.#beginDate = beginDate;\n\n      if (isInvalidEndDate) {\n        this.#endDate = null;\n        this.#internals.setFormValue(beginDateStr);\n        this.dispatchEvent(new PickedDateSetEvent({\n          beginDate,\n          endDate: null,\n        }));\n      }\n      else {\n        const endDateStr = dateToString(endDate);\n        this.#endDate = endDate;\n        this.#internals.setFormValue(`${beginDateStr}/${endDateStr}`);\n        this.dispatchEvent(new PickedDateSetEvent({\n          beginDate,\n          endDate,\n        }));\n      }\n    }\n  }\n\n  get beginDateValue() {\n    return this.#beginDate instanceof Date\n      ? new Date(this.#beginDate)\n      : null;\n  }\n\n  get endDateValue() {\n    return this.#endDate instanceof Date\n      ? new Date(this.#endDate)\n      : null;\n  }\n\n  get form() {\n    return this.#internals.form;\n  }\n\n  get name() {\n    return this.attributes.getNamedItem('name')?.nodeValue;\n  }\n\n  get type() {\n    return this.localName;\n  }\n\n  get validity() {\n    return this.#internals.validity;\n  }\n\n  get validationMessage() {\n    return this.#internals.validationMessage;\n  }\n\n  get willValidate() {\n    return this.#internals.willValidate;\n  }\n\n  checkValidity() {\n    return this.#internals.checkValidity();\n  }\n\n  reportValidity() {\n    return this.#internals.reportValidity();\n  }\n}\n", "// @ts-check\n\nimport { CalendarViewChangeEvent } from '../events/calendar-view-change-event.js';\nimport { SelectedDateChangeEvent } from '../events/selected-date-change-event.js';\nimport { SelectedDateSetEvent } from '../events/selected-date-set-event.js';\nimport { SelectionModeSetEvent } from '../events/selection-mode-set-event.js';\nimport { YearMonthViewChangeEvent } from '../events/year-month-view-change-event.js';\nimport { dateToNumber, dateToString, isInvalidDate } from '../tools/date.js';\nimport { at, el, on, tx } from '../tools/dom.js';\n\nimport { ContextAwareElement } from './context-aware.js';\nimport { DatePickerControlElement } from './date-picker-control.js';\n\n/** @typedef {import('./date-picker-control.js').SelectionMode} SelectionMode */\n\nexport class DatePickerViewElement extends ContextAwareElement {\n  static #ID_INC = 0;\n\n  static #STYLES = (function () {\n    const style = new CSSStyleSheet();\n\n    style.replace(`\n:host {\n  --si-width: 336px;\n  --si-calendar-label-margin: 8px;\n  --si-calendar-label-text-color: dimgray;\n  --si-cell-size: calc(var(--si-width) / 7);\n  --si-cell-width: var(--si-cell-size);\n  --si-cell-height: var(--si-cell-size);\n  --si-cell-bg-color: white;\n  --si-cell-text-color: black;\n  --si-cell-font-weight: normal;\n  --si-cell-selected-bg-color: aliceblue;\n  --si-cell-selected-text-color: black;\n  --si-cell-selected-font-weight: bold;\n  --si-cell-weekend-text-color: red;\n  --si-cell-other-month-text-color: silver;\n  --si-cell-other-month-weekend-text-color: tomato;\n  --si-cell-font-size: 16px;\n  --si-inner-cell-selected-bg-color: lightblue;\n  --si-inner-cell-padding: 10px;\n  --si-inner-cell-size: min(\n    calc(var(--si-cell-width) - var(--si-inner-cell-padding)),\n    calc(var(--si-cell-height) - var(--si-inner-cell-padding))\n  );\n  --si-header-height: calc(var(--si-cell-size) - 4px);\n  --si-section-height: calc(\n      var(--si-header-height)\n      + var(--si-calendar-label-margin)\n      + var(--si-header-height)\n      + var(--si-calendar-label-margin)\n      + var(--si-cell-height)\n      + var(--si-cell-height)\n      + var(--si-cell-height)\n      + var(--si-cell-height)\n      + var(--si-cell-height)\n      + var(--si-cell-height)\n  );\n  --si-section-width: var(--si-width);\n  display: block;\n  font-family: sans-serif;\n  width: var(--si-width);\n  height: var(--si-section-height);\n}\n\n.sr-only {\n  display: none;\n  visibility: hidden;\n}\n\nsection {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: var(--si-section-width);\n  height: var(--si-section-height);\n}\n\nsection > header {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n  width: 100%;\n  height: var(--si-header-height);\n}\n\nsection > header > .year-month-pagination {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n}\n\nsection > header > .year-month-pagination > button {\n  box-sizing: border-box;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  width: var(--si-cell-size);\n  height: var(--si-header-height);\n  margin: 0;\n  padding: 0;\n  border: var(--si-button-border, 1px solid none);\n  background-color: var(--si-button-bg-color, none);\n}\n\nsection select[name=\"month\"] {\n  box-sizing: border-box;\n  height: var(--si-header-height);\n  padding: 0 8px;\n}\n\nsection input[name=\"year\"] {\n  box-sizing: border-box;\n  display: block;\n  width: 96px;\n  height: var(--si-header-height);\n  padding: 0 8px;\n}\n\nsection > table {\n  border-collapse: collapse;\n  border-spacing: 0;\n  width: var(--si-width);\n}\n\nsection > table,\nsection > table > thead > tr > th,\nsection > table > tbody > tr > td {\n  border: none;\n}\n\nsection > table > thead > tr > th,\nsection > table > thead > tr > th > span,\nsection > table > tbody > tr > td,\nsection > table > tbody > tr > td > label {\n  box-sizing: border-box;\n  width: var(--si-cell-width);\n  height: var(--si-cell-height);\n  padding: 0;\n  margin: 0;\n  font-size: var(--si-cell-font-size);\n}\n\nsection > table > thead > tr > th > span {\n  -webkit-user-select: none;\n  user-select: none;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  line-height: 1;\n  margin-top: var(--si-calendar-label-margin);\n  margin-bottom: var(--si-calendar-label-margin);\n  font-weight: normal;\n  color: var(--si-calendar-label-text-color);\n}\n\nsection > table > tbody > tr > td > label {\n  box-sizing: border-box;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n}\n\nsection > table > tbody > tr > td > label.range-selected {\n  background-color: var(--si-cell-selected-bg-color);\n}\n\nsection > table > tbody > tr > td > label.range-selected-first {\n  border-top-left-radius: 50%;\n  border-bottom-left-radius: 50%;\n}\n\nsection > table > tbody > tr > td > label.range-selected-last {\n  border-top-right-radius: 50%;\n  border-bottom-right-radius: 50%;\n}\n\nsection > table > tbody > tr > td > label > input {\n  display: none;\n  visibility: hidden;\n}\n\nsection > table > tbody > tr > td > label > span {\n  -webkit-user-select: none;\n  user-select: none;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  width: var(--si-inner-cell-size);\n  height: var(--si-inner-cell-size);\n  border-radius: 50%;\n}\n\nsection > table > tbody > tr > td > label > span > span {\n  display: block;\n  padding: 0;\n  margin: 0;\n  font-variant-numeric: normal;\n  line-height: 1;\n}\n\nsection > table > tbody > tr > td > label:has(input:checked) > span {\n  background-color: var(--si-inner-cell-selected-bg-color);\n}\n\nsection > table > tbody > tr > td > label:has(input:checked) > span > span {\n  color: var(--si-cell-selected-text-color, white);\n  font-weight: var(--si-cell-selected-font-weight, bold);\n}\n\nsection > table > tbody > tr > td > label.weekend > span > span {\n  color: var(--si-cell-weekend-text-color);\n}\n\nsection > table > tbody > tr > td > label.other-month > span > span {\n  color: var(--si-cell-other-month-text-color);\n}\n\nsection > table > tbody > tr > td > label.other-month.weekend > span > span {\n  color: var(--si-cell-other-month-weekend-text-color);\n}\n    `);\n\n    return [\n      style,\n    ];\n  })();\n\n  static get observedAttributes() {\n    return [\n      'lang',\n      'timeperiod',\n    ];\n  }\n\n  #shadowRoot = this.attachShadow({ mode: 'closed' });\n  #idSufix = DatePickerViewElement.#ID_INC++;\n\n  /** @type {HTMLTableSectionElement} */\n  #calendarTbody;\n\n  /** @type {HTMLInputElement} */\n  #yearInput;\n\n  /** @type {HTMLSelectElement} */\n  #monthSelect;\n\n  /** @type {HTMLSlotElement} */\n  #yearMonthControlsSlot;\n\n  #minYear = 100;\n  #maxYear = 275759;\n\n  #yearView = 0;\n  #monthIndexView = 0;\n\n  /** @type {SelectionMode} */\n  #selectionMode = DatePickerControlElement.SELECTION_MODE_SINGLE;\n\n  /** @type {Date} */\n  #selectedBeginDate;\n\n  /** @type {Date} */\n  #selectedEndDate;\n\n  /** @type {(date: Date) => boolean} */\n  #isDateDisabled = (date) => {\n    return false;\n  };\n\n  async connectedCallback() {\n    this.#shadowRoot.adoptedStyleSheets = DatePickerViewElement.#STYLES;\n\n    this.#render();\n\n    const controlCtx = await this.requireContext(DatePickerControlElement);\n    const viewCtx = await this.requireContext(DatePickerViewElement);\n\n    this.#selectionMode = controlCtx.selectionMode;\n    this.#selectedBeginDate = controlCtx.beginDateValue;\n    this.#selectedEndDate = controlCtx.endDateValue;\n\n    controlCtx.addEventListener(SelectedDateSetEvent.EVENT_TYPE, this.#handleSelectedDateSet);\n    controlCtx.addEventListener(SelectionModeSetEvent.EVENT_TYPE, this.#handleSelectionModeSet);\n    viewCtx.addEventListener(CalendarViewChangeEvent.EVENT_TYPE, this.#handleCalendarViewChange);\n\n    const defaultDate = this.#selectedBeginDate instanceof Date\n      ? this.#selectedBeginDate\n      : new Date();\n\n    this.#setYearMonthView(\n      defaultDate.getUTCFullYear(),\n      defaultDate.getUTCMonth(),\n    );\n  }\n\n  async disconnectedCallback() {\n    const controlCtx = await this.requireContext(DatePickerControlElement);\n    const viewCtx = await this.requireContext(DatePickerViewElement);\n\n    controlCtx.removeEventListener(SelectedDateSetEvent.EVENT_TYPE, this.#handleSelectedDateSet);\n    controlCtx.removeEventListener(SelectionModeSetEvent.EVENT_TYPE, this.#handleSelectionModeSet);\n    viewCtx.removeEventListener(CalendarViewChangeEvent.EVENT_TYPE, this.#handleCalendarViewChange);\n  }\n\n  get monthNames() {\n    const formatter = new Intl.DateTimeFormat(this.#locale, { month: 'long' });\n    const monthIndexes = [...Array(12).keys()];\n    return monthIndexes.map((monthIndex) => {\n      const date = new Date(2000, monthIndex);\n      return formatter.format(date);\n    });\n  }\n\n  get dayShortNames() {\n    const formatter = new Intl.DateTimeFormat(this.#locale, { weekday: 'short' });\n    const dayIndexes = [...Array(7).keys()];\n    const firstDayOfWeekDate = new Date(2000, 0, 1);\n    firstDayOfWeekDate.setUTCDate(firstDayOfWeekDate.getUTCDate() - firstDayOfWeekDate.getUTCDay());\n    return dayIndexes.map((dayIndex) => {\n      const date = new Date(firstDayOfWeekDate);\n      date.setUTCDate(date.getUTCDate() + dayIndex);\n      return formatter.format(date);\n    });\n  }\n\n  get yearView() {\n    return this.#yearView;\n  }\n\n  get monthIndexView() {\n    return this.#monthIndexView;\n  }\n\n  /**\n   * @param {Date} [date]\n   */\n  setSelectedBeginDate(date) {\n    if (isInvalidDate(date)) {\n      this.#selectedBeginDate = null;\n    }\n    else {\n      this.#selectedBeginDate = date;\n    }\n\n    this.#selectedEndDate = null;\n\n    this.#patchRangeSelection();\n  }\n\n  /**\n   * @param {Date} [date]\n   */\n  setSelectedEndDate(date) {\n    if (!(this.#selectedBeginDate instanceof Date)) {\n      throw new Error('Begin date must be set first');\n    }\n\n    if (isInvalidDate(date)) {\n      this.#selectedEndDate = null;\n    }\n    else {\n      if (date.getTime() < this.#selectedBeginDate.getTime()) {\n        this.setSelectedBeginDate(date);\n        return;\n      }\n\n      this.#selectedEndDate = new Date(date);\n    }\n\n    this.#patchRangeSelection();\n  }\n\n  /**\n   * @param {(date: Date) => boolean} filterFn\n   */\n  async setDisabledFilter(filterFn) {\n    this.#isDateDisabled = filterFn;\n\n    const viewCtx = await this.requireContext(DatePickerViewElement);\n\n    viewCtx.dispatchEvent(new CalendarViewChangeEvent());\n  }\n\n  /**\n   * @param {number} year\n   * @param {number} monthIndex\n   */\n  async #setYearMonthView(year, monthIndex) {\n    this.#yearView = year;\n    this.#monthIndexView = monthIndex;\n    const monthLabel = this.monthNames[monthIndex];\n\n    this.#monthSelect.selectedIndex = monthIndex;\n    this.#yearInput.value = year.toString();\n\n    const viewCtx = await this.requireContext(DatePickerViewElement);\n\n    viewCtx.dispatchEvent(new YearMonthViewChangeEvent(\n      year,\n      monthIndex,\n      monthLabel,\n    ));\n\n    viewCtx.dispatchEvent(new CalendarViewChangeEvent());\n  }\n\n  /**\n   * @param {Event} event\n   */\n  #handleCalendarViewChange = (event) => {\n    if (event instanceof CalendarViewChangeEvent) {\n      const newCalendar = this.#renderCalendar();\n      this.#calendarTbody.replaceWith(newCalendar);\n      this.#calendarTbody = newCalendar;\n      this.#patchRangeSelection();\n    }\n  };\n\n  get #datesByWeekView() {\n    const year = this.yearView;\n    const monthIndex = this.monthIndexView;\n\n    const beginOfMonthDate = new Date(year, monthIndex, 1, 0, 0, 0, 0);\n    const beginOfWeekOfMonthDate = new Date(beginOfMonthDate);\n    beginOfWeekOfMonthDate.setUTCDate(beginOfWeekOfMonthDate.getUTCDate() - beginOfWeekOfMonthDate.getUTCDay());\n\n    const endOfMonthDate = new Date(year, monthIndex + 1, 0, 0, 0, 0, 0);\n    const endOfWeekOfMonthDate = new Date(endOfMonthDate);\n    endOfWeekOfMonthDate.setUTCDate(endOfWeekOfMonthDate.getUTCDate() + (6 - endOfWeekOfMonthDate.getUTCDay()));\n\n    let date = new Date(beginOfWeekOfMonthDate);\n\n    const weeksView = [\n      {\n        dates: [\n          {\n            date: new Date(date),\n            isCurrMonth: false,\n            isPrevMonth: true,\n            isNextMonth: false,\n            isToday: false,\n            isWeekend: false,\n            isDisabled: false,\n          },\n        ].slice(0, 0),\n      },\n    ];\n\n    let dayIndex = 0;\n\n    const selectedDateIsoString = isInvalidDate(this.#selectedBeginDate) ? null : dateToString(this.#selectedBeginDate);\n\n    while (date.getTime() <= endOfWeekOfMonthDate.getTime() || weeksView.length <= 6) {\n      const latestWeek = weeksView[weeksView.length - 1];\n\n      const dateDayIndex = date.getUTCDay();\n      const dateMonthIndex = date.getUTCMonth();\n      const dateYear = date.getUTCFullYear();\n\n      const yearViewDiff = (dateYear - this.yearView) * 12;\n\n      const isCurrMonth = (yearViewDiff + dateMonthIndex) === this.monthIndexView;\n      const isPrevMonth = (yearViewDiff + dateMonthIndex) < this.monthIndexView;\n      const isNextMonth = (yearViewDiff + dateMonthIndex) > this.monthIndexView;\n      const isToday = dateToString(date) === selectedDateIsoString;\n      const isWeekend = dateDayIndex === 0 || dateDayIndex === 6;\n      const isDisabled = typeof this.#isDateDisabled === 'function'\n        ? this.#isDateDisabled(date)\n        : false;\n\n      latestWeek.dates.push({\n        date: new Date(date),\n        numericDate: dateToNumber(date),\n        isCurrMonth,\n        isPrevMonth,\n        isNextMonth,\n        isToday,\n        isWeekend,\n        isDisabled,\n      });\n\n      date.setUTCDate(date.getUTCDate() + 1);\n\n      dayIndex++;\n\n      if (dayIndex === 7) {\n        weeksView.push({\n          dates: [],\n        });\n\n        dayIndex = 0;\n      }\n    }\n\n    return weeksView;\n  }\n\n  /**\n   * @param {string} name\n   */\n  #id(name) {\n    return `${name}-${this.#idSufix}`;\n  }\n\n  get #locale() {\n    const locales = this.lang || 'en';\n    return locales;\n  }\n\n  #viewPrevMonth() {\n    const monthIndex = this.#monthSelect.selectedIndex;\n    const year = parseInt(this.#yearInput.value, 10);\n    const prevMonthIndex = monthIndex - 1;\n    if (prevMonthIndex < 0) {\n      this.#monthSelect.selectedIndex = 11;\n      this.#yearInput.value = (year - 1).toString();\n      this.#setYearMonthView(year - 1, 11);\n    }\n    else {\n      this.#monthSelect.selectedIndex = prevMonthIndex;\n      this.#setYearMonthView(year, prevMonthIndex);\n    }\n  }\n\n  #viewNextMonth() {\n    const monthIndex = this.#monthSelect.selectedIndex;\n    const year = parseInt(this.#yearInput.value, 10);\n    const nextMonthIndex = monthIndex + 1;\n    if (nextMonthIndex > 11) {\n      this.#monthSelect.selectedIndex = 0;\n      this.#yearInput.value = (year + 1).toString();\n      this.#setYearMonthView(year + 1, 0);\n    }\n    else {\n      this.#monthSelect.selectedIndex = nextMonthIndex;\n      this.#setYearMonthView(year, nextMonthIndex);\n    }\n  }\n\n  /**\n   * @param {Date} date\n   */\n  async #handleDateSelect(date) {\n    if (this.#selectionMode === DatePickerControlElement.SELECTION_MODE_SINGLE) {\n      if (this.#selectedBeginDate instanceof Date) {\n        if (this.#selectedBeginDate.getTime() === date.getTime()) {\n          this.setSelectedBeginDate(null);\n        }\n        else {\n          this.setSelectedBeginDate(date);\n        }\n      }\n      else {\n        this.setSelectedBeginDate(date);\n      }\n    }\n    else if (this.#selectionMode === DatePickerControlElement.SELECTION_MODE_RANGE) {\n      if (this.#selectedBeginDate instanceof Date) {\n        if (date.getTime() < this.#selectedBeginDate.getTime()) {\n          this.setSelectedBeginDate(date);\n        }\n        else {\n          if (this.#selectedBeginDate.getTime() === date.getTime()) {\n            this.setSelectedBeginDate(null);\n          }\n          else {\n            /**\n             * What happens when begin date and end date has been set?\n             */\n            if (this.#selectedEndDate instanceof Date) {\n              /**\n               * USE CASE 1: Reset\n               */\n              this.setSelectedBeginDate(date);\n\n              /**\n               * USE CASE 2: Set end date\n               */\n              // if (date.getTime() === this.#selectedEndDate.getTime()) {\n              //   this.setSelectedEndDate(null);\n              // }\n              // else {\n              //   this.setSelectedEndDate(date);\n              // }\n            }\n            else {\n              this.setSelectedEndDate(date);\n            }\n          }\n        }\n      }\n      else {\n        this.setSelectedBeginDate(date);\n      }\n    }\n    else {\n      throw new Error('Invalid selection mode: ' + this.#selectionMode);\n    }\n\n    const controlCtx = await this.requireContext(DatePickerControlElement);\n\n    controlCtx.dispatchEvent(new SelectedDateChangeEvent({\n      beginDate: this.#selectedBeginDate,\n      endDate: this.#selectedEndDate,\n    }));\n  }\n\n  /**\n   * @param {Event} event\n   */\n  #handleSelectionModeSet = (event) => {\n    if (event instanceof SelectionModeSetEvent) {\n      this.#selectionMode = event.detail.selectionMode;\n      this.setSelectedEndDate(null);\n    }\n  };\n\n  /**\n   * @param {Event} event\n   */\n  #handleSelectedDateSet = (event) => {\n    if (event instanceof SelectedDateSetEvent) {\n      this.#selectedBeginDate = event.detail.beginDate;\n      this.#selectedEndDate = event.detail.endDate;\n      this.#patchRangeSelection();\n    }\n  };\n\n  #render() {\n    this.#shadowRoot.appendChild(el('section', () => [\n      el('header', () => [\n        this.#yearMonthControlsSlot = el('slot', () => [\n          at('name', 'year-month-controls'),\n          el('label', () => [\n            at('class', 'sr-only'),\n            at('for', this.#id('month-select')),\n            tx('Month'),\n          ]),\n          this.#monthSelect = el('select', () => [\n            at('id', this.#id('month-select')),\n            at('name', 'month'),\n            at('aria-label', 'Month'),\n            on('change', (event) => {\n              event.preventDefault();\n              const monthIndex = this.#monthSelect.selectedIndex;\n              const year = parseInt(this.#yearInput.value, 10);\n              this.#setYearMonthView(year, monthIndex);\n            }),\n            ...this.monthNames.map((monthName, index) => {\n              return el('option', () => [\n                at('value', monthName),\n                ...(index === this.monthIndexView ? [at('selected', 'selected')] : []),\n                tx(monthName),\n              ]);\n            }),\n          ]),\n          el('label', () => [\n            at('class', 'sr-only'),\n            at('for', this.#id('year-input')),\n            tx('Year'),\n          ]),\n          this.#yearInput = el('input', () => [\n            at('id', this.#id('year-input')),\n            at('type', 'number'),\n            at('name', 'year'),\n            at('aria-label', 'Year'),\n            at('value', this.yearView.toString()),\n            at('min', this.#minYear.toString()), // Minimum save year for javascript Date object as of 2024-01-30\n            at('max', this.#maxYear.toString()), // Maximum save year for javascript Date object as of 2024-01-30\n            on('change', (event) => {\n              const monthIndex = this.#monthSelect.selectedIndex;\n              const year = parseInt(this.#yearInput.value, 10);\n              if (year < this.#minYear) {\n                event.preventDefault();\n                this.#yearInput.setCustomValidity(`Year must be greater than or equal to ${this.#minYear}`);\n                this.#yearInput.reportValidity();\n              }\n              else if (year > this.#maxYear) {\n                event.preventDefault();\n                this.#yearInput.setCustomValidity(`Year must be less than or equal to ${this.#maxYear}`);\n                this.#yearInput.reportValidity();\n              }\n              this.#setYearMonthView(year, monthIndex);\n            }),\n          ]),\n        ]),\n\n        el('div', () => [\n          at('class', 'year-month-pagination'),\n          el('button', () => [\n            at('type', 'button'),\n            on('click', (event) => {\n              event.preventDefault();\n              this.#viewPrevMonth();\n            }),\n            el('slot', () => [\n              at('name', 'prev-icon'),\n              (slot) => slot.innerHTML = `\n                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 -960 960 960\" height=\"24\" width=\"24\" title=\"Previous\"><path fill=\"currentColor\" d=\"m432-480 156 156q11 11 11 28t-11 28q-11 11-28 11t-28-11L348-452q-6-6-8.5-13t-2.5-15q0-8 2.5-15t8.5-13l184-184q11-11 28-11t28 11q11 11 11 28t-11 28L432-480Z\"/></svg>\n              `,\n            ]),\n          ]),\n          el('button', () => [\n            at('type', 'button'),\n            on('click', (event) => {\n              event.preventDefault();\n              this.#viewNextMonth();\n            }),\n            el('slot', () => [\n              at('name', 'next-icon'),\n              (slot) => slot.innerHTML = `\n                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 -960 960 960\" height=\"24\" width=\"24\" title=\"Next\"><path fill=\"currentColor\" d=\"M504-480 348-636q-11-11-11-28t11-28q11-11 28-11t28 11l184 184q6 6 8.5 13t2.5 15q0 8-2.5 15t-8.5 13L404-268q-11 11-28 11t-28-11q-11-11-11-28t11-28l156-156Z\"/></svg>\n              `,\n            ]),\n          ]),\n        ]),\n      ]),\n\n      el('table', () => [\n        el('thead', () => [\n          el('tr', () => [\n            ...this.dayShortNames.map((dayShortName) => {\n              return el('th', () => [\n                el('span', () => [\n                  tx(dayShortName),\n                ]),\n              ]);\n            }),\n          ]),\n        ]),\n\n        this.#calendarTbody = el('tbody', () => []),\n      ]),\n    ]));\n  }\n\n  #renderCalendar() {\n    return el('tbody', () => [\n      ...this.#datesByWeekView.map((week) => {\n        return el('tr', () => [\n          ...week.dates.map((date) => {\n            return el('td', () => [\n              el('label', () => [\n                at('class', [\n                  ...(date.isWeekend ? ['weekend'] : []),\n                  ...(date.isCurrMonth ? [] : ['other-month']),\n                ].join(' ')),\n                el('input', () => [\n                  at('type', 'checkbox'),\n                  at('name', 'date'),\n                  at('value', date.date.toISOString()),\n                  ...(date.isDisabled ? [at('disabled', 'disabled')] : []),\n                  ...(date.isToday ? [at('checked', 'checked')] : []),\n                  on('change', (event) => {\n                    try {\n                      this.#handleDateSelect(date.date);\n                      if (date.isPrevMonth) {\n                        this.#viewPrevMonth();\n                      }\n                      else if (date.isNextMonth) {\n                        this.#viewNextMonth();\n                      }\n                    }\n                    catch (error) {\n                      event.preventDefault();\n                      throw error;\n                    }\n                  }),\n                ]),\n                el('span', () => [\n                  el('span', () => [\n                    tx(date.date.getUTCDate().toString().padStart(2, '0')),\n                  ]),\n                ]),\n              ]),\n            ]);\n          }),\n        ]);\n      }),\n    ]);\n  }\n\n  #patchRangeSelection() {\n    if (!(this.#calendarTbody instanceof HTMLTableSectionElement)) {\n      return;\n    }\n\n    const beginDate = this.#selectedBeginDate;\n    const endDate = this.#selectedEndDate;\n\n    const beginNumericDate = dateToNumber(beginDate);\n    const endNumericDate = dateToNumber(endDate);\n\n    const isSingleSelect = this.#selectionMode === DatePickerControlElement.SELECTION_MODE_SINGLE;\n\n    const treeWalker = document.createTreeWalker(\n      this.#calendarTbody,\n      NodeFilter.SHOW_ELEMENT,\n      {\n        acceptNode(node) {\n          return (node instanceof HTMLInputElement && node.name === 'date')\n            ? NodeFilter.FILTER_ACCEPT\n            : NodeFilter.FILTER_SKIP;\n        },\n      },\n    );\n\n    let input = treeWalker.currentNode;\n\n    while (input instanceof Node) {\n      input = treeWalker.nextNode();\n\n      if (!(input instanceof HTMLInputElement)) {\n        continue;\n      }\n\n      const label = input.labels.item(0);\n\n      if (!(label instanceof HTMLLabelElement)) {\n        continue;\n      }\n\n      // Reset label state\n      label.classList.remove('range-selected');\n      label.classList.remove('range-selected-first');\n      label.classList.remove('range-selected-last');\n\n      const date = new Date(input.value);\n      const numericDate = dateToNumber(date);\n\n      const isFirst = numericDate === beginNumericDate;\n      const isLast = numericDate === endNumericDate;\n\n      if (isFirst || isLast) {\n        input.checked = true;\n        input.setAttribute('checked', 'checked');\n      }\n      else {\n        input.checked = false;\n        input.removeAttribute('checked');\n      }\n\n      if (isSingleSelect) {\n        continue;\n      }\n\n      const isInRange = true\n        && (numericDate >= beginNumericDate)\n        && (numericDate <= endNumericDate);\n\n      if (isInRange) {\n        label.classList.add('range-selected');\n      }\n\n      if (isFirst) {\n        label.classList.add('range-selected-first');\n      }\n      else if (isLast) {\n        label.classList.add('range-selected-last');\n      }\n    }\n  }\n}\n", "// @ts-check\n\nimport { DatePickerViewElement } from '../elements/date-picker-view.js';\n\ncustomElements.define('f-date-picker-view', DatePickerViewElement);\n", "// @ts-check\n\nimport '../components/f-date-picker-view.js';\nimport { PickedDateSetEvent } from '../events/picked-date-set-event.js';\nimport { SelectionModeSetEvent } from '../events/selection-mode-set-event.js';\nimport { at, el } from '../tools/dom.js';\n\nimport { DatePickerControlElement } from './date-picker-control.js';\n\nexport class DatePickerInlineElement extends DatePickerControlElement {\n  static #STYLES = (function () {\n    const style = new CSSStyleSheet();\n\n    style.replace(`\n    `);\n\n    return [style];\n  })();\n\n  static get formAssociated() {\n    return true;\n  }\n\n  static get observedAttributes() {\n    return [\n      'value',\n      'time-unit',\n      'selection-mode',\n    ];\n  }\n\n  #shadowRoot = this.attachShadow({ mode: 'closed' });\n\n  connectedCallback() {\n    super.connectedCallback();\n\n    this.#shadowRoot.adoptedStyleSheets = DatePickerInlineElement.#STYLES;\n\n    this.#render();\n  }\n\n  /**\n   * @param {string} name\n   * @param {string} oldValue\n   * @param {any} newValue\n   */\n  async attributeChangedCallback(name, oldValue, newValue) {\n    if (name === 'value') {\n      this.value = newValue;\n\n      const controlCtx = await this.requireContext(DatePickerControlElement);\n\n      controlCtx.dispatchEvent(new PickedDateSetEvent({\n        beginDate: this.beginDateValue,\n        endDate: this.endDateValue,\n      }));\n    }\n    else if (name === 'time-unit') {\n      this.timeUnit = newValue;\n    }\n    else if (name === 'selection-mode') {\n      this.selectionMode = newValue;\n\n      const controlCtx = await this.requireContext(DatePickerControlElement);\n\n      controlCtx.dispatchEvent(new SelectionModeSetEvent(this.selectionMode));\n    }\n  }\n\n  #render() {\n    this.#shadowRoot.appendChild(\n      el('slot', () => [\n        at('name', 'date-picker-view'),\n        el('f-date-picker-view', () => []),\n      ]),\n    );\n  }\n}\n", "// @ts-check\n\nimport { DatePickerInlineElement } from '../elements/date-picker-inline.js';\n\ncustomElements.define('f-date-picker-inline', DatePickerInlineElement);\n", "// @ts-check\n\nimport { YearMonthViewChangeEvent } from '../events/year-month-view-change-event.js';\nimport { tx } from '../tools/dom.js';\n\nimport { ContextAwareElement } from './context-aware.js';\nimport { DatePickerViewElement } from './date-picker-view.js';\n\nexport class DatePickerMonthViewElement extends ContextAwareElement {\n  #shadowRoot = this.attachShadow({ mode: 'closed' });\n\n  /** @type {Text} */\n  #text;\n\n  async connectedCallback() {\n    this.#render();\n\n    const viewCtx = await this.requireContext(DatePickerViewElement);\n\n    viewCtx.addEventListener(YearMonthViewChangeEvent.EVENT_TYPE, this.#handleMonthViewChange);\n\n    this.#text.nodeValue = viewCtx.monthNames[viewCtx.monthIndexView];\n  }\n\n  async disconnectedCallback() {\n    const viewCtx = await this.requireContext(DatePickerViewElement);\n\n    viewCtx.removeEventListener(YearMonthViewChangeEvent.EVENT_TYPE, this.#handleMonthViewChange);\n  }\n\n  /**\n   * @param {Event} event\n   */\n  #handleMonthViewChange = (event) => {\n    if (event instanceof YearMonthViewChangeEvent) {\n      this.#text.nodeValue = event.detail.monthLabel.toString();\n    }\n  };\n\n  #render() {\n    this.#shadowRoot.appendChild(this.#text = tx(''));\n  }\n}\n", "// @ts-check\n\nimport { DatePickerMonthViewElement } from '../elements/date-picker-month-view.js';\n\ncustomElements.define('f-date-picker-month-view', DatePickerMonthViewElement);\n", "// @ts-check\n\nimport { YearMonthViewChangeEvent } from '../events/year-month-view-change-event.js';\nimport { tx } from '../tools/dom.js';\n\nimport { ContextAwareElement } from './context-aware.js';\nimport { DatePickerViewElement } from './date-picker-view.js';\n\nexport class DatePickerYearViewElement extends ContextAwareElement {\n  static get requiredContexts() {\n    return [\n      DatePickerViewElement,\n    ];\n  }\n\n  #shadowRoot = this.attachShadow({ mode: 'closed' });\n\n  /** @type {Text} */\n  #text;\n\n  async connectedCallback() {\n    this.#render();\n\n    const viewCtx = await this.requireContext(DatePickerViewElement);\n\n    viewCtx.addEventListener(YearMonthViewChangeEvent.EVENT_TYPE, this.#handleChange);\n  }\n\n  async disconnectedCallback() {\n    const viewCtx = await this.requireContext(DatePickerViewElement);\n\n    viewCtx.removeEventListener(YearMonthViewChangeEvent.EVENT_TYPE, this.#handleChange);\n\n    this.#text.nodeValue = viewCtx.yearView?.toString();\n  }\n\n  /**\n   * @param {CustomEvent} event\n   */\n  #handleChange = (event) => {\n    if (event instanceof YearMonthViewChangeEvent) {\n      this.#text.nodeValue = event.detail.year.toString();\n    }\n  };\n\n  #render() {\n    this.#shadowRoot.appendChild(this.#text = tx(''));\n  }\n}\n", "// @ts-check\n\nimport { DatePickerYearViewElement } from '../elements/date-picker-year-view.js';\n\ncustomElements.define('f-date-picker-year-view', DatePickerYearViewElement);\n", "// @ts-check\n\nimport { DateRelatedEvent } from './date-related-event.js';\n\n/** @typedef {import('../tools/date.js').DateRange} DateRange */\n/** @typedef {import('./date-related-event.js').DateRelatedEventDetail} DateRelatedEventDetail */\n\nexport class PickedDateChangeEvent extends DateRelatedEvent {\n  static get EVENT_TYPE() {\n    return 'change';\n  }\n\n  /**\n   * @param {DateRange} dateRange\n   * @param {CustomEventInit<DateRelatedEventDetail>} [options]\n   */\n  constructor(dateRange, options) {\n    super(PickedDateChangeEvent.EVENT_TYPE, dateRange, options);\n  }\n}\n", "// @ts-check\n\nimport '../components/f-date-picker-view.js';\nimport { PickedDateChangeEvent } from '../events/picked-date-change-event.js';\nimport { PickedDateSetEvent } from '../events/picked-date-set-event.js';\nimport { SelectedDateChangeEvent } from '../events/selected-date-change-event.js';\nimport { SelectedDateSetEvent } from '../events/selected-date-set-event.js';\nimport { dateRangeToString, dateToString } from '../tools/date.js';\nimport { at, el, on, tx } from '../tools/dom.js';\n\nimport { DatePickerControlElement } from './date-picker-control.js';\n\nexport class DatePickerDialogElement extends DatePickerControlElement {\n  static #STYLES = (function () {\n    const style = new CSSStyleSheet();\n\n    style.replace(`\n:host {\n  --si-input-button-height: 36px;\n  --si-submit-button-height: 36px;\n  --si-dialog-radius: 4px;\n  --si-dialog-padding: 16px;\n}\nbutton {\n  display: block;\n  padding: 0 8px;\n  height: var(--si-input-button-height);\n}\ndialog {\n  border: none;\n  padding: var(--si-dialog-padding);\n  border-radius: var(--si-dialog-radius);\n}\ndialog > form > slot > div {\n  display: flex;\n  justify-content: flex-end;\n  gap: 8px;\n  margin-top: 8px;\n}\ndialog > form > slot > div > button {\n  display: block;\n  padding: 0 8px;\n  height: var(--si-submit-button-height);\n}\n    `);\n\n    return [style];\n  })();\n\n  static get formAssociated() {\n    return true;\n  }\n\n  static get observedAttributes() {\n    return [\n      'open',\n      'value',\n    ];\n  }\n\n  #shadowRoot = this.attachShadow({ mode: 'closed' });\n\n  /** @type {Text} */\n  #buttonText;\n\n  /** @type {HTMLDialogElement} */\n  #dialog;\n\n  /** @type {HTMLFormElement} */\n  #form;\n\n  /** @type {Date} */\n  #selectedBeginDate;\n\n  /** @type {Date} */\n  #selectedEndDate;\n\n  async connectedCallback() {\n    const controlCtx = await this.requireContext(DatePickerControlElement);\n\n    controlCtx.addEventListener(PickedDateChangeEvent.EVENT_TYPE, this.#handlePickedDateChange);\n    controlCtx.addEventListener(PickedDateSetEvent.EVENT_TYPE, this.#handlePickedDateSet);\n    controlCtx.addEventListener(SelectedDateChangeEvent.EVENT_TYPE, this.#handleSelectedDateChange);\n\n    super.connectedCallback();\n\n    this.#shadowRoot.adoptedStyleSheets = DatePickerDialogElement.#STYLES;\n\n    this.#render();\n\n    this.#dialog.addEventListener('open', this.#handleDialogOpen);\n    this.#dialog.addEventListener('close', this.#handleDialogClose);\n\n    if (this.hasAttribute('open')) {\n      this.#openDatePicker();\n    }\n    else {\n      this.#closeDatePicker();\n    }\n\n    this.#updateButtonText();\n  }\n\n  async disconnectedCallback() {\n    this.#dialog.removeEventListener('open', this.#handleDialogOpen);\n    this.#dialog.removeEventListener('close', this.#handleDialogClose);\n\n    const controlCtx = await this.requireContext(DatePickerControlElement);\n\n    controlCtx.removeEventListener(PickedDateChangeEvent.EVENT_TYPE, this.#handlePickedDateChange);\n    controlCtx.removeEventListener(PickedDateSetEvent.EVENT_TYPE, this.#handlePickedDateSet);\n    controlCtx.removeEventListener(SelectedDateChangeEvent.EVENT_TYPE, this.#handleSelectedDateChange);\n  }\n\n  /**\n   * @param {string} name\n   * @param {string} oldValue\n   * @param {string} newValue\n   */\n  attributeChangedCallback(name, oldValue, newValue) {\n    if (name === 'open') {\n      if (newValue === null) {\n        this.#closeDatePicker();\n      }\n      else {\n        this.#openDatePicker();\n      }\n    }\n    else if (name === 'value') {\n      if (newValue === null) {\n        this.value = null;\n      }\n      else {\n        this.value = newValue;\n      }\n      this.#updateButtonText();\n    }\n  }\n\n  requestSubmit = () => {\n    this.#form.requestSubmit();\n  };\n\n  closeDatePicker() {\n    this.#closeDatePicker();\n  }\n\n  #updateButtonText() {\n    if (this.beginDateValue instanceof Date) {\n      if (this.#buttonText instanceof Text) {\n        this.#buttonText.nodeValue = `Selected Date: ${this.value}`;\n      }\n    }\n    else {\n      if (this.#buttonText instanceof Text) {\n        this.#buttonText.nodeValue = 'Select Date';\n      }\n    }\n  }\n\n  #openDatePicker = async () => {\n    if (this.#dialog instanceof HTMLDialogElement) {\n      const controlCtx = await this.requireContext(DatePickerControlElement);\n\n      controlCtx.dispatchEvent(new SelectedDateSetEvent({\n        beginDate: this.#selectedBeginDate,\n        endDate: this.#selectedEndDate,\n      }));\n\n      this.#dialog.showModal();\n\n      if (!this.hasAttribute('open')) {\n        this.setAttribute('open', '');\n      }\n    }\n  };\n\n  #closeDatePicker = () => {\n    if (this.#dialog instanceof HTMLDialogElement) {\n      this.#dialog.close();\n    }\n  };\n\n  #handleDialogOpen = async () => {\n    if (!this.hasAttribute('open')) {\n      this.setAttribute('open', '');\n    }\n  };\n\n  #handleDialogClose = () => {\n    if (this.hasAttribute('open')) {\n      this.removeAttribute('open');\n    }\n  };\n\n  /**\n   * @param {Event} event\n   */\n  #handleSelectedDateChange = (event) => {\n    if (event instanceof SelectedDateChangeEvent) {\n      const { beginDate, endDate } = event.detail;\n\n      this.#selectedBeginDate = beginDate;\n      this.#selectedEndDate = endDate;\n    }\n  };\n\n  /**\n   * @param {Event} event\n   */\n  #handlePickedDateChange = (event) => {\n    if (event instanceof PickedDateChangeEvent) {\n      this.#updateButtonText();\n    }\n  };\n\n  /**\n   * @param {Event} event\n   */\n  #handlePickedDateSet = (event) => {\n    if (event instanceof PickedDateSetEvent) {\n      const { beginDate, endDate } = event.detail;\n\n      this.#selectedBeginDate = beginDate;\n      this.#selectedEndDate = endDate;\n\n      this.#updateButtonText();\n    }\n  };\n\n  #handleFormSubmit = () => {\n    if (this.selectionMode === DatePickerControlElement.SELECTION_MODE_SINGLE) {\n      this.value = dateToString(this.#selectedBeginDate);\n    }\n    else if (this.selectionMode === DatePickerControlElement.SELECTION_MODE_RANGE) {\n      this.value = dateRangeToString({\n        beginDate: this.#selectedBeginDate,\n        endDate: this.#selectedEndDate,\n      });\n    }\n    else {\n      throw new Error('Invalid selection mode');\n    }\n\n    this.#updateButtonText();\n  };\n\n  #render() {\n    this.#shadowRoot.appendChild(el('div', () => [\n      el('slot', () => [\n        at('name', 'date-picker-controls'),\n        el('button', () => [\n          on('click', this.#openDatePicker),\n          this.#buttonText = tx('Select Date'),\n        ]),\n      ]),\n      this.#dialog = el('dialog', () => [\n        this.#form = el('form', () => [\n          at('method', 'dialog'),\n          on('submit', this.#handleFormSubmit),\n          el('slot', () => [\n            at('name', 'date-picker-view'),\n            el('f-date-picker-view', () => []),\n          ]),\n          el('slot', () => [\n            at('name', 'form-controls'),\n            el('div', () => [\n              el('button', () => [\n                at('type', 'button'),\n                on('click', this.#closeDatePicker),\n                tx('Cancel'),\n              ]),\n              el('button', () => [\n                at('type', 'submit'),\n                tx('Apply'),\n              ]),\n            ]),\n          ]),\n        ]),\n      ]),\n    ]));\n  }\n}\n", "// @ts-check\n\nimport { DatePickerDialogElement } from '../elements/date-picker-dialog.js';\n\ncustomElements.define('f-date-picker-dialog', DatePickerDialogElement);\n"],
  "mappings": "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",
  "names": ["beginDateStr", "endDateStr", "beginDate", "endDate"]
}
